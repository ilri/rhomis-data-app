{"version":3,"sources":["components/authentication-component/AuthContext.js","components/login-component/login-component.js","components/fetching-context-info/fetching-context-info.js","components/register-component/register-component.js","components/main-card-component/main-card-component.js","components/portal-component/portal-data.js","components/portal-component/portal-component.js","components/user-info-component/UserContext.js","components/project-management-component/project-management-component.js","components/form-management-component/form-management-component.js","components/navigation-bar/navigation-bar-component.js","components/form-creation-component/form-creation-component.js","components/logout-component/logout-component.js","components/data-collection-component/data-collection-component.js","components/data-access-component/data-access-component.js","components/user-management-component/user-management-component.js","components/routing-component/routing-component.js","components/no-mobile-component/no-mobile-component.js","App.js","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","CheckCredentials","props","email","Store","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","password","LoginCard","useContext","setAuthToken","history","useHistory","useState","setEmail","setPassword","requestError","setRequestError","loading","setLoading","useEffect","localToken","localStorage","getItem","currentDate","Date","localTokenCreationTime","getTime","push","Card","className","Header","Body","size","Form","style","marginLeft","marginRight","Group","Label","htmlFor","Control","id","onChange","event","target","value","Button","variant","Spinner","as","animation","role","onClick","Login","tokenResponse","status","data","setItem","tokenDate","textAlign","width","href","preventDefault","axios","method","url","process","response","LoginComponent","open","setOpen","Fade","in","FetchUserInformation","getSubmissionCount","projectName","authToken","headers","Authorization","result","JSON","parse","stringify","setUserInfo","CheckForLocalToken","timeDifference","GetFormInformation","formName","setFormData","alert","GetInformationForFormComponent","RegistrationCard","setTitle","confirmPassword","setConfirmPassword","confirmEmail","setConfirmEmail","firstName","setfirstName","surname","setSurname","captchaToken","setCaptchaToken","passwordsMatch","bothPasswordsEntered","length","emailsMatch","bothEmailsEntered","registrationEnabled","Row","Col","xs","Select","defaultValue","disabled","Text","sitekey","RegisterUser","registrationResult","RegisterComponent","clear","MainCard","children","doc_extension","color","CardTitle","display","flexDirection","filters","map","filter","back_link","CardBody","PortalDataAll","name","label","text","icon","RiSurveyFill","link","external","AiOutlineForm","MdOutlineDashboardCustomize","MdHelpOutline","FetchProjectInformation","PortalCard","Icon","action","margin","padding","border","backgroundColor","textDecoration","RenderPortalCards","portalCardData","userData","basic","cardToAdd","item","dataCollector","projectManager","analyst","administrator","researcher","PortalItem","PortalComponent","setUserData","setUserInfoAvail","CheckLoggedIn","newUserData","UserContext","CreateProject","description","projectDescription","projectCreationResponse","NoProjectFound","Table","striped","bordered","hover","colSpan","setAdminData","RenderProjectInformation","newProjectName","setNewProjectName","newProjectDescription","setNewProjectDescription","projects","undefined","project","index","dateString","createdAt","toDateString","verticalAlign","marginBottom","placeholder","e","rows","ProjectManagementComponent","adminData","setProjectSelected","NoInfoFound","ProjectNewForm","projectSelected","SubmissionsCount","submissions","form","draftOrLive","draft","live","submissionsLoading","FormOptions","render_live","render_draft","edit_published","DropdownButton","menuVariant","drop","Dropdown","Item","FormTables","allowToFinalize","user","roles","includes","formsExist","forms","draft_version","draftVersion","live_version","liveVersion","date","d","month","getMonth","day","getDate","year","getFullYear","join","formatDate","accessData","RenderProjectAdmin","setFilters","setFormSelected","FormManagementComponent","useParams","setSubmissionLoading","formSelected","GetUserInfo","GetAdminData","setShowProjectManagement","setShowAdmin","setShowCollectData","MainNavbar","show","setShow","handleClose","showAdmin","showProjectManagement","Navbar","fixed","bg","expand","Nav","Link","to","Offcanvas","backdrop","placement","onHide","closeVariant","closeButton","Title","GetProjectInformation","setProjectInformation","DeleteProject","CreateForm","formVersion","formFile","console","log","formCreationResponse","UpdateForm","CreateProjectForm","CreateNewBlankForm","setFormList","projectList","projectDisabled","setSelectedDraftProject","newFormList","option","setNewFormName","setNewFormVersion","controlId","stopPropagation","setSelectedFile","files","selectedProject","newFormName","newFormVersion","selectedFile","UpdateDraftForm","formList","setNewDraftFormName","setSelectedDraftFile","selectedDraftProject","newDraftFormName","newDraftFormVersion","selectedDraftFile","FinalizeFormEntry","FinalizeForm","params","form_name","project_name","AddAdministrator","newAdmin","FormCreationComponent","projectInformation","setSelectedProject","setNewDraftFormVersion","setNewAdmin","Accordion","defaultActiveKey","eventKey","md","marginTop","LogoutComponent","formEditURL","setFormEditURL","formState","encoded_settings","DataCollectionComponent","renderODKFormCode","projectManagerOfForm","dataAnalystOfForm","odkConf","users","initialState","setInitialState","FetchUserInfo","new_form_state","CheckFormCode","CheckProjectManager","draftCollectionDetails","collectionDetails","CheckODKConf","deflateSync","toString","CheckEncodedSettings","SetInitialFormState","RenderRawDataCard","rawData","setRawData","dataDownload","setDataDownloadLink","FetchData","dataType","projectID","formID","unit","NewRawUnitsData","FetchRawData","raw_data_download_link","generateDataDownloadLink","ProcessData","commandType","process_label","userInfo","setShowRawData","download","formData","time_updated","rawDataExtracted","RenderUnitsForm","background_color","text_color","show_tick","showPrices","ShowUnitsForm","formType","formLabel","checkBoxLabel","submissionLabel","processLabel","updatedTime","unitsExtracted","RenderPriceAndCalorieConversions","showOutputs","pricesCalculated","RenderFinalOutputs","dataDownloadLink","buttonLoading","setButtonLoading","RetrieveZipFile","RetrieveZipData","finalIndicators","RenderConversionTable","unitsData","survey_value","id_rhomis_dataset","conversion","changing_units","findIndex","elem","unit_type","update","setUnitsData","UpdateUnitsData","SubmitUnitsData","unitType","unitsSelect","setUnitsSelect","unitsDownloadLink","setUnitsDownloadLink","submitAllUnits","setSubmitAllUnits","pricesNames","newUnitsData","units_download_link","units","some","priceName","Check","removeNotification","responseType","generateZipDownloadLink","ZipResponse","Blob","window","URL","revokeObjectURL","createObjectURL","dataToDownload","dataCSV","csv_lines","full_data_set","column_names","household_index","household_column_names","Object","keys","column_index","new_column","column","splice","index_of_previous_column_name","indexOf","household_data","household","concat","generateCSV","CheckFormData","setShowUnits","setShowPrices","setShowOutputs","DataAccessComponent","showUnits","showRawData","CheckAndUpdateFormInformation","height","BuildRequest","userType","AddFormUser","request","UserForm","projectManagerEmail","setProjectManagerEmail","setUserType","UserManagementComponent","setProjectManagerOfForm","RoutingComponent","authenticated","setAuthenticated","exact","path","from","component","NoMobile","App","innerWidth","setWidth","isMobile","setIsMobile","handleWindowSizeChange","addEventListener","removeEventListener","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99466de1.chunk.js","sourcesContent":["// Copyright (C) 2022 Léo Gorman\n// \n// This file is part of rhomis-data-app.\n// \n// rhomis-data-app is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n// \n// rhomis-data-app is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n// \n// You should have received a copy of the GNU General Public License\n// along with rhomis-data-app.  If not, see <http://www.gnu.org/licenses/>.\n\n\n\n// A component for creating the authentiction\n// context used throughout the application.\n\n// Context provider created in the main App.js\n// file in the src directory.\n\nimport React, { createContext } from 'react';\n\nconst AuthContext = createContext()\n\nexport default AuthContext;\n\n","/**/\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { Button, Card, Form, Spinner } from \"react-bootstrap\";\nimport Fade from \"react-bootstrap/Fade\";\nimport { FaUserCircle } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router\";\nimport \"./login-component.css\";\n\nimport AuthContext from \"../authentication-component/AuthContext\";\n\nimport { Store } from \"react-notifications-component\";\n\nfunction CheckCredentials(props) {\n  if ((props.email === null) | (props.email === \"\")) {\n    Store.addNotification({\n      title: \"User Error\",\n      message: \"Must include email\",\n      type: \"danger\",\n      insert: \"top\",\n      container: \"top-right\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 2000,\n      },\n    });\n    return false;\n  }\n  if ((props.password === null) | (props.password === \"\")) {\n    Store.addNotification({\n      title: \"User Error\",\n      message: \"Must password\",\n      type: \"danger\",\n      insert: \"top\",\n      container: \"top-right\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 2000,\n      },\n    });\n    return false;\n  }\n\n  return true;\n}\n\nfunction LoginCard(props) {\n  const [authToken, setAuthToken] = useContext(AuthContext);\n\n  const history = useHistory();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [requestError, setRequestError] = useState(\"\");\n  const [loading, setLoading] = useState(\"\");\n\n  useEffect(() => {\n    const localToken = localStorage.getItem(\"userToken\");\n    // console.log(\"Local Token\")\n    // console.log(localToken)\n\n    const currentDate = new Date();\n    const localTokenCreationTime = new Date(localStorage.getItem(\"createdAt\"));\n    // console.log(\"Current date\")\n    // console.log(currentDate)\n    // console.log(\"Token time\")\n    // console.log(localTokenCreationTime)\n\n    // console.log(\"Difference\")\n    // console.log(currentDate.getTime() - localTokenCreationTime.getTime())\n\n    const timeDifference =\n      currentDate.getTime() - localTokenCreationTime.getTime();\n    if (timeDifference < 60 * 60 * 1000) {\n      setAuthToken(localToken);\n      history.push(\"/\");\n      return;\n    }\n  }, []);\n\n  return (\n    <Card className=\"card-style border-0 login-card\">\n      <Card.Header className=\"bg-dark text-white\">\n        <h2>Login</h2>\n      </Card.Header>\n\n      <Card.Body>\n        <div className=\"icon-container\">\n          <FaUserCircle size={60} />\n        </div>\n        <Form style={{ marginLeft: \"2em\", marginRight: \"2em\" }}>\n          <Form.Group className=\"form-group-spaced\">\n            <Form.Label htmlFor=\"email\">Email</Form.Label>\n            <Form.Control\n              id=\"email\"\n              type=\"text\"\n              onChange={(event) => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group className=\"form-group-spaced\">\n            <Form.Label htmlFor=\"password\">Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              onChange={(event) => setPassword(event.target.value)}\n            />\n          </Form.Group>\n          {requestError ? <p className=\"warning\">{requestError}</p> : null}\n          <div className=\"button-container\">\n            {loading ? (\n              <Button className=\"login-buttons\" variant=\"dark\">\n                <Spinner\n                  as=\"span\"\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                />\n                Loading\n              </Button>\n            ) : (\n              <Button\n                className=\"login-buttons\"\n                type=\"submit\"\n                variant=\"dark\"\n                onClick={async (event) => {\n                  setLoading(true);\n\n                  const tokenResponse = await Login({\n                    event: event,\n                    email: email,\n                    password: password,\n                    requestError: requestError,\n                    setRequestError: setRequestError,\n\n                    // setAuthToken: props.setAuthToken\n                  });\n                  setLoading(false);\n\n                  if (tokenResponse.status === 400) {\n                    history.push(\"/login\");\n                    return;\n                  }\n\n                  if (tokenResponse.status === 200) {\n                    setAuthToken(tokenResponse.data);\n                    localStorage.setItem(\"userToken\", tokenResponse.data);\n                    const tokenDate = new Date();\n                    localStorage.setItem(\"createdAt\", tokenDate);\n                    history.push(\"/\");\n                  }\n                }}\n              >\n                Login\n              </Button>\n            )}\n          </div>\n          <div style={{ textAlign: \"center\", width: \"100%\" }}>\n            Don't have an account?&nbsp;\n            <a href=\"/#/register\">Click here</a> for registration\n          </div>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}\n\nasync function Login(props) {\n  props.event.preventDefault();\n  props.setRequestError(null);\n\n  const credentialsGiven = CheckCredentials({\n    email: props.email,\n    password: props.password,\n  });\n\n  if (credentialsGiven == false) {\n    return {\n      status: 400,\n      message: \"Missing Credentials\",\n    };\n  }\n\n  try {\n    // await timeout(2000)\n\n    const response = await axios({\n      method: \"post\",\n      url: process.env.REACT_APP_AUTHENTICATOR_URL + \"api/user/login\",\n      data: {\n        email: props.email,\n        password: props.password,\n      },\n    });\n    // console.log(response)\n    return response;\n  } catch (err) {\n    Store.addNotification({\n      title: \"Error\",\n      message: err.response.data,\n      type: \"danger\",\n      insert: \"top\",\n      container: \"top-right\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 2000,\n      },\n    });\n    return err.response;\n  }\n}\n\nfunction LoginComponent(props) {\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    setOpen(true);\n  }, []);\n\n  return (\n    <Fade in={open}>\n      <div className=\"child-login-container\">\n        <LoginCard />\n      </div>\n    </Fade>\n  );\n}\n\nexport { LoginComponent, CheckCredentials, LoginCard, Login };\n","import axios from \"axios\";\nimport { useFilters } from \"react-table/dist/react-table.development\";\n\nasync function FetchUserInformation(props) {\n  let getSubmissionCount = false;\n  let projectName = false;\n  if (props.getSubmissionCount === true) {\n    getSubmissionCount = true;\n    projectName = props.projectName;\n  }\n\n  // console.log(\"Get Submissions Count\")\n  // console.log(projectName)\n\n  if (props.authToken) {\n    try {\n      const response = await axios({\n        method: \"post\",\n        url: process.env.REACT_APP_AUTHENTICATOR_URL + \"api/meta-data/\",\n        data: {\n          getSubmissionCount: getSubmissionCount,\n          projectName: projectName,\n        },\n        headers: {\n          Authorization: props.authToken,\n        },\n      });\n      // console.log(\"user info\")\n      // console.log(response.data)\n      let result = JSON.parse(JSON.stringify(response.data));\n      // console.log(result)\n      props.setUserInfo(result);\n    } catch (err) {\n      // console.log(err)\n    }\n  }\n\n  // return (response.data)\n}\n\nfunction CheckForLocalToken(props) {\n  const localToken = localStorage.getItem(\"userToken\");\n  // console.log(\"local_token is :\" + localToken)\n  if (!localToken) {\n    props.setAuthToken(null);\n    return false;\n  }\n\n  const currentDate = new Date();\n  const localTokenCreationTime = new Date(localStorage.getItem(\"createdAt\"));\n\n  // console.log(\"Difference\")\n  // console.log(currentDate.getTime() - localTokenCreationTime.getTime())\n\n  const timeDifference =\n    currentDate.getTime() - localTokenCreationTime.getTime();\n  if (timeDifference < 60 * 60 * 1000) {\n    props.setAuthToken(localToken);\n    return true;\n  }\n  if (timeDifference > 60 * 60 * 1000) {\n    props.setAuthToken(null);\n    return false;\n  }\n\n  return false;\n}\n\nasync function GetFormInformation(props) {\n  const result = await axios({\n    method: \"post\",\n    url: process.env.REACT_APP_API_URL + \"api/project-data\",\n    headers: {\n      Authorization: props.authToken,\n    },\n    data: {\n      projectName: props.projectName,\n      formName: props.formName,\n    },\n  });\n\n  if (result.status === 200) {\n    props.setFormData(result.data);\n  }\n  if (result.status === 400) {\n    alert(result.data);\n  }\n}\n\nasync function GetInformationForFormComponent(props) {\n  // console.log(\"GET FORM INFO\")\n  // console.log(props)\n  await FetchUserInformation({\n    authToken: props.authToken,\n    setUserInfo: props.setUserInfo,\n  });\n\n  await GetFormInformation({\n    authToken: props.authToken,\n    projectName: props.projectName,\n    formName: props.formName,\n    setFormData: props.setFormData,\n  });\n}\n\nexport {\n  CheckForLocalToken,\n  FetchUserInformation,\n  GetFormInformation,\n  GetInformationForFormComponent,\n};\n","// Copyright (C) 2022 Léo Gorman\n//\n// This file is part of rhomis-data-app.\n//\n// rhomis-data-app is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// rhomis-data-app is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with rhomis-data-app.  If not, see <http://www.gnu.org/licenses/>.\n\n/**/\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { Button, Card, Form, Spinner, Row, Col } from \"react-bootstrap\";\nimport Fade from \"react-bootstrap/Fade\";\nimport { FaUserCircle } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router\";\nimport \"./register-component.css\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport PasswordStrengthBar from \"react-password-strength-bar\";\n\nimport AuthContext from \"../authentication-component/AuthContext\";\nimport { CheckForLocalToken } from \"../fetching-context-info/fetching-context-info\";\n\nfunction timeout(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nfunction CheckCredentials(props) {\n  if (props.email === null) {\n    props.setRequestError(\"No email given\");\n    return false;\n  }\n  if (props.password === null) {\n    props.setRequestError(\"No password given\");\n    return false;\n  }\n\n  return true;\n}\n\nfunction RegistrationCard(props) {\n  // // console.log(\"site key\")\n  // // console.log(process.env)\n\n  // console.log(props)\n\n  const [title, setTitle] = useState(\"\");\n\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const [email, setEmail] = useState(\"\");\n  const [confirmEmail, setConfirmEmail] = useState(\"\");\n\n  const [firstName, setfirstName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  // const [institution, setInstitution] = useState(\"\")\n  // const [description, setDescription] = useState(\"\")\n\n  const [loading, setLoading] = useState(false);\n  const [requestError, setRequestError] = useState(null);\n\n  const [captchaToken, setCaptchaToken] = useState(null);\n\n  const history = useHistory();\n\n  let passwordsMatch = password === confirmPassword;\n  let bothPasswordsEntered = password.length > 0 && confirmPassword.length > 0;\n\n  let emailsMatch = email === confirmEmail;\n  let bothEmailsEntered = email.length > 0 && confirmEmail.length > 0;\n\n  let registrationEnabled = true;\n\n  // console.log(passwordsMatch)\n  // console.log(bothPasswordsEntered)\n  // console.log(emailsMatch)\n  // console.log(bothEmailsEntered)\n  // console.log(title.length > 0)\n  // console.log(firstName.length > 0)\n  // console.log(surname.length > 0)\n  // console.log(emailsMatch)\n  // console.log(bothEmailsEntered)\n  // console.log(title.length > 0)\n  // console.log(firstName.length > 0)\n  // console.log(surname.length > 0)\n  // console.log(captchaToken)\n\n  if (\n    passwordsMatch &&\n    bothPasswordsEntered &&\n    emailsMatch &&\n    bothEmailsEntered &&\n    title.length > 0 &&\n    firstName.length > 0 &&\n    surname.length > 0 &&\n    captchaToken\n  ) {\n    registrationEnabled = false;\n  }\n\n  return (\n    <Card className=\"card-style border-0 registration-card\">\n      <Card.Header className=\"bg-dark text-white\">\n        <h2>Signup</h2>\n      </Card.Header>\n      <Card.Body>\n        {/* <div className=\"icon-container\">\n                    <FaUserCircle size={60} />\n                </div> */}\n        <Form style={{ marginLeft: \"3em\", marginRight: \"3em\" }}>\n          <Row>\n            <Col xs={3}>\n              <Form.Group className=\"form-group-spaced\">\n                <Form.Label htmlFor=\"email\">Title</Form.Label>\n                <Form.Select\n                  id=\"title\"\n                  defaultValue=\"Select\"\n                  onChange={(event) => setTitle(event.target.value)}\n                >\n                  <option disabled=\"true\">Select</option>\n                  <option value=\"ms\">Ms</option>\n                  <option value=\"misss\">Miss</option>\n                  <option value=\"mrs\">Mrs</option>\n                  <option value=\"dr\">Dr</option>\n                  <option value=\"mr\">Mr</option>\n                  <option value=\"mx\">Mx</option>\n                </Form.Select>\n              </Form.Group>\n            </Col>\n            <Col xs={4}>\n              <Form.Group className=\"form-group-spaced\">\n                <Form.Label htmlFor=\"name\">First Name</Form.Label>\n                <Form.Control\n                  id=\"name\"\n                  type=\"text\"\n                  onChange={(event) => setfirstName(event.target.value)}\n                />\n              </Form.Group>\n            </Col>\n            <Col xs={5}>\n              <Form.Group className=\"form-group-spaced\">\n                <Form.Label htmlFor=\"surname\">Surname</Form.Label>\n                <Form.Control\n                  id=\"surname\"\n                  type=\"text\"\n                  onChange={(event) => setSurname(event.target.value)}\n                />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form.Group className=\"form-group-spaced\">\n                <Form.Label htmlFor=\"email\">Email</Form.Label>\n                <Form.Control\n                  id=\"email\"\n                  type=\"text\"\n                  onChange={(event) => setEmail(event.target.value)}\n                />\n              </Form.Group>\n            </Col>\n\n            <Col>\n              <Form.Group className=\"form-group-spaced\">\n                <Form.Label htmlFor=\"email\">Confirm Email</Form.Label>\n                <Form.Control\n                  id=\"confirmemail\"\n                  type=\"text\"\n                  onChange={(event) => setConfirmEmail(event.target.value)}\n                />\n              </Form.Group>\n              {bothEmailsEntered ? (\n                <Form.Text style={{ textAlign: \"end\" }}>\n                  {emailsMatch ? \"Emails match\" : \"Emails don't match\"}\n                </Form.Text>\n              ) : (\n                <></>\n              )}\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form.Group className=\"form-group-spaced\">\n                <Form.Label htmlFor=\"password\">Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  onChange={(event) => {\n                    setPassword(event.target.value);\n                  }}\n                />\n              </Form.Group>\n\n              <PasswordStrengthBar password={password} />\n            </Col>\n            <Col>\n              <Form.Group className=\"form-group-spaced\">\n                <Form.Label htmlFor=\"password\">Confirm Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  onChange={(event) => {\n                    setConfirmPassword(event.target.value);\n                  }}\n                />\n                {bothPasswordsEntered ? (\n                  <Form.Text style={{ textAlign: \"end\" }}>\n                    {passwordsMatch\n                      ? \"Passwords match\"\n                      : \"Passwords don't match\"}\n                  </Form.Text>\n                ) : (\n                  <></>\n                )}\n              </Form.Group>\n            </Col>\n          </Row>\n          {requestError ? <p className=\"warning\">{requestError}</p> : null}\n          <div className=\"icon-container\">\n            <ReCAPTCHA\n              sitekey={process.env.REACT_APP_RECAPTCHA_SITE_KEY}\n              onChange={async (value) => {\n                setCaptchaToken(value);\n              }}\n            />\n          </div>\n\n          <div className=\"button-container\">\n            {loading ? (\n              <Button className=\"login-buttons\" variant=\"dark\">\n                <Spinner\n                  as=\"span\"\n                  animation=\"border\"\n                  size=\"sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                />\n                Loading...\n              </Button>\n            ) : (\n              <Button\n                disabled={registrationEnabled}\n                className=\"login-buttons\"\n                variant=\"dark\"\n                onClick={async (event) => {\n                  setLoading(true);\n\n                  const registrationResult = await RegisterUser({\n                    event: event,\n                    title: title,\n                    firstName: firstName,\n                    surname: surname,\n                    email: email,\n                    password: password,\n                    captchaToken: captchaToken,\n                    requestError: requestError,\n                    setRequestError: setRequestError,\n                  });\n                  setLoading(false);\n\n                  if (\n                    registrationResult.status > 199 ||\n                    registrationResult.status < 300\n                  ) {\n                    history.push(\"/#/login\");\n                    // props.setCardType(!props.cardType)\n                  }\n                  // console.log(\"registrationResult\")\n                  // console.log(registrationResult)\n                }}\n              >\n                Register\n              </Button>\n            )}\n          </div>\n          <div style={{ textAlign: \"center\", width: \"100%\" }}>\n            Already got an account?&nbsp;\n            <a href=\"/#/login\">Click here</a> for login\n          </div>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}\n\nasync function RegisterUser(props) {\n  // Stop the page from refreshing\n  props.event.preventDefault();\n  props.setRequestError(null);\n\n  // check all of the details given\n  const credentialsGiven = CheckCredentials({\n    title: props.title,\n    firstName: props.firstName,\n    surname: props.surname,\n    email: props.email,\n    password: props.password,\n    requestError: props.requestError,\n    setRequestError: props.setRequestError,\n    captchaToken: props.captchaToken,\n  });\n  try {\n    // await timeout(2000)\n\n    const response = await axios({\n      method: \"post\",\n      url: process.env.REACT_APP_AUTHENTICATOR_URL + \"api/user/register\",\n      data: {\n        // username: username,\n        title: props.title,\n        firstName: props.firstName,\n        surname: props.surname,\n        email: props.email,\n        password: props.password,\n        captchaToken: props.captchaToken,\n      },\n    });\n    // console.log(response)\n    return response;\n  } catch (err) {\n    // console.log(err)\n    props.setRequestError(err.response.data);\n    return err.response;\n  }\n}\n\nfunction RegisterComponent(props) {\n  const [open, setOpen] = useState(false);\n  const [authToken, setAuthToken] = useContext(AuthContext);\n  const history = useHistory();\n  useEffect(async () => {\n    setAuthToken(null);\n    localStorage.clear();\n  }, []);\n\n  useEffect(async () => {\n    setOpen(true);\n  }, [authToken]);\n\n  return (\n    <Fade in={open}>\n      <div className=\"child-login-container\">\n        <RegistrationCard />\n      </div>\n    </Fade>\n  );\n}\n\nexport { RegisterComponent, CheckCredentials, RegistrationCard, RegisterUser };\n","import React from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\n\nimport { MdHelpOutline } from \"react-icons/md\";\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\n\nexport default function MainCard(props, { children }) {\n  /* Expecting the arguments\n    CardTitle: The title you want for the card\n    CardBody: The card Body\n    filters:\n    history: the history of the component\n    back_link: the link to return to\n    doc_extension: the end of the do url, e.g. \"source/user-guide/first-time-user.html#rhomis-portal\"\n\n    */\n\n  return (\n    <div className=\"sub-page-container\">\n      <Card className=\"main-card border-0\">\n        <Card.Header className=\"bg-dark text-white\">\n          <div className=\"main-card-header-container\">\n            <a\n              href={process.env.REACT_APP_DOCS + props.doc_extension}\n              target=\"_blank\"\n            >\n              <Button className=\"bg-dark border-0\">\n                <MdHelpOutline size={30} style={{ color: \"white\" }} />\n              </Button>\n            </a>\n\n            <h3 className=\"main-card-header\"> {props.CardTitle}</h3>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                marginLeft: \"auto\",\n              }}\n            >\n              {props.filters.map((filter) => {\n                return (\n                  <div className=\"main-card-header-item\" key={filter}>\n                    {filter}\n                  </div>\n                );\n              })}\n\n              {props.back_link !== null ? (\n                <Button\n                  className=\"bg-dark border-0\"\n                  onClick={() => {\n                    props.history.push(props.back_link);\n                  }}\n                >\n                  <AiOutlineArrowLeft size={25} />\n                </Button>\n              ) : (\n                <></>\n              )}\n            </div>\n          </div>\n        </Card.Header>\n        <Card.Body className=\"main-card-body\">{props.CardBody}</Card.Body>\n      </Card>\n    </div>\n  );\n}\n","// Copyright (C) 2022 Léo Gorman\n//\n// This file is part of rhomis-data-app.\n//\n// rhomis-data-app is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// rhomis-data-app is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with rhomis-data-app.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { RiSurveyFill } from 'react-icons/ri'\nimport { VscInspect } from 'react-icons/vsc'\nimport { FcAcceptDatabase } from 'react-icons/fc'\nimport { FiDatabase } from 'react-icons/fi'\nimport { MdHelpOutline, MdOutlineDashboardCustomize, MdOutlineSendToMobile, MdOutlineCreate } from 'react-icons/md'\nimport {AiOutlineForm} from  'react-icons/ai'\nexport const PortalDataAll = [\n    {\n        name: \"Build a Survey\",\n        label: \"surveyBuilder\",\n        text: \"Get started straight away. Build a survey, collect test-data, and view your data.\",\n        icon: RiSurveyFill,\n        link: process.env.REACT_APP_SURVEY_BUILDER_URL,\n        external: true,\n    },\n    {\n        name: \"Module Management\",\n        label: \"administrator\",\n        text: \"Manage RHoMIS Modules\",\n        icon: AiOutlineForm,\n        link: process.env.REACT_APP_SURVEY_BUILDER_URL,\n        external: true,\n\n    },\n\n    {\n        name: \"Manage Projects\",\n        label: \"projectManager\",\n        text: \"Check up on your projects, download your data, and control user access.\",\n        icon: MdOutlineDashboardCustomize,\n        link: \"/projects\",\n        external: false,\n\n    },\n\n    // {\n    //     name: \"Collect Data\",\n    //     label: \"dataCollector\",\n    //     text: \"Collect data for an existing project and access enumerator training materials\",\n    //     icon: MdOutlineSendToMobile,\n    //     link: \"/projects\",\n    //     external: false,\n\n\n    // },\n    // {\n    //     name: \"Global Dataset\",\n    //     label: \"globalData\",\n    //     text: \"Query publicly available survey data by time, location, and content.\",\n    //     icon: FiDatabase,\n    //     link: \"https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/9M6EHS\",\n    //     external: true,\n\n\n    // },\n    {\n        name: \"Help\",\n        label: \"help\",\n        text: \"See guidance for more advanced use case and how to contribute to our system\",\n        icon: MdHelpOutline,\n        link: process.env.REACT_APP_DOCS + \"source/user-guide/first-time-user.html#rhomis-portal\",\n        external: true,\n    }\n    // {\n    //     name: \"Admin\",\n    //     label: \"administrator\",\n    //     text: \"Create projects and forms (only used for development)\",\n    //     icon: MdOutlineCreate,\n    //     link: \"/administration\",\n    //     external: false,\n    // }\n]\n\n","// Copyright (C) 2022 Léo Gorman\n//\n// This file is part of rhomis-data-app.\n//\n// rhomis-data-app is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// rhomis-data-app is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with rhomis-data-app.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Component, useState, useEffect, useContext } from \"react\";\nimport { Form, Card, Table, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport AuthContext from \"../authentication-component/AuthContext\";\nimport { MdHelpOutline } from \"react-icons/md\";\n\nimport MainCard from \"../main-card-component/main-card-component\";\n\nimport axios from \"axios\";\n\nimport { Redirect, useHistory } from \"react-router\";\n\nimport { PortalDataAll } from \"./portal-data\";\n\nimport { CheckForLocalToken } from \"../fetching-context-info/fetching-context-info\";\n\nimport \"./portal-component.css\";\nimport \"../../App.css\";\n\nasync function FetchProjectInformation(authToken) {\n  // Basic get request for metadata\n  const response = await axios({\n    method: \"get\",\n    url: process.env.REACT_APP_AUTHENTICATOR_URL + \"api/user/\",\n    headers: {\n      Authorization: authToken,\n    },\n  });\n  // console.log(response.data);\n\n  return response.data;\n}\n\nfunction PortalCard(props) {\n  const Icon = props.data.icon;\n  const history = useHistory();\n\n  if (props.data.external === false) {\n    return (\n      <div\n        onClick={() => {\n          history.push(props.data.link);\n        }}\n      >\n        <Card\n          key={\"card-\" + props.data.name}\n          className=\"sub-card portal-card border-0\"\n        >\n          <div\n            key={\"header-container-\" + props.data.name}\n            className=\"portal-card-header-container\"\n          >\n            <h4\n              key={\"card-header-\" + props.data.name}\n              className=\"portal-card-header\"\n            >\n              {props.data.name}\n            </h4>\n          </div>\n          <div\n            key={\"icon-container-\" + props.data.name}\n            className=\"portal-icon-container\"\n          >\n            <Icon size={100} color=\"white\" />\n          </div>\n        </Card>\n      </div>\n    );\n  }\n\n  if ((props.data.external === true) & (props.data.label === \"surveyBuilder\")) {\n    // console.log(\"Auth token\");\n\n    // console.log(props.authToken);\n    return (\n      <div>\n        <form method=\"post\" action={props.data.link} className=\"inline\">\n          <input type=\"hidden\" name=\"token\" value={props.authToken} />\n          <input\n            type=\"hidden\"\n            name=\"redirect_url\"\n            value=\"/admin/xlsform/create\"\n          />\n          <button\n            type=\"submit\"\n            style={{\n              margin: 0,\n              padding: 0,\n              border: 0,\n              backgroundColor: \"white\",\n            }}\n          >\n            <Card\n              key={\"card-\" + props.data.name}\n              className=\"sub-card portal-card border-0\"\n            >\n              <div\n                key={\"header-container-\" + props.data.name}\n                className=\"portal-card-header-container\"\n              >\n                <h4\n                  key={\"card-header-\" + props.data.name}\n                  className=\"portal-card-header\"\n                >\n                  {props.data.name}\n                </h4>\n              </div>\n              <div\n                key={\"icon-container-\" + props.data.name}\n                className=\"portal-icon-container\"\n              >\n                <Icon size={100} color=\"white\" />\n              </div>\n            </Card>\n          </button>\n        </form>\n      </div>\n    );\n  }\n\n  if (props.data.name === \"surveyBuilder\") {\n    return (\n      <div>\n        <form method=\"post\" action={props.data.link} className=\"inline\">\n          <input type=\"hidden\" name=\"token\" value={props.authToken} />\n          <input type=\"hidden\" name=\"redirect_url\" value=\"/admin/module\" />\n          <button\n            type=\"submit\"\n            style={{\n              margin: 0,\n              padding: 0,\n              border: 0,\n              backgroundColor: \"white\",\n            }}\n          >\n            <Card\n              key={\"card-\" + props.data.name}\n              className=\"sub-card portal-card border-0\"\n            >\n              <div\n                key={\"header-container-\" + props.data.name}\n                className=\"portal-card-header-container\"\n              >\n                <h4\n                  key={\"card-header-\" + props.data.name}\n                  className=\"portal-card-header\"\n                >\n                  {props.data.name}\n                </h4>\n              </div>\n              <div\n                key={\"icon-container-\" + props.data.name}\n                className=\"portal-icon-container\"\n              >\n                <Icon size={100} color=\"white\" />\n              </div>\n            </Card>\n          </button>\n        </form>\n      </div>\n    );\n  }\n\n  if ((props.data.external === true) & (props.data.label !== \"surveyBuilder\")) {\n    return (\n      <div>\n        <a\n          style={{ textDecoration: \"none\" }}\n          href={props.data.link}\n          target=\"_blank\"\n        >\n          <Card className=\"sub-card portal-card border-0\">\n            <div className=\"portal-card-header-container\">\n              <h4 className=\"portal-card-header\">{props.data.name}</h4>\n            </div>\n            <div className=\"portal-icon-container\">\n              <Icon size={100} color=\"white\" />\n            </div>\n          </Card>\n        </a>\n      </div>\n    );\n  }\n}\n\nfunction RenderPortalCards(props) {\n  const portalCardData = [];\n  // console.log(props.data[0]);\n  // console.log(props.userData);\n\n  if (props.userData) {\n    if (props.userData.basic === true) {\n      const cardToAdd = props.data.filter(\n        (item) => item.label === \"surveyBuilder\"\n      );\n      portalCardData.push(...cardToAdd);\n    }\n    if (props.userData.dataCollector.length > 0) {\n      const cardToAdd = props.data.filter(\n        (item) => item.label === \"dataCollector\"\n      );\n      portalCardData.push(...cardToAdd);\n    }\n\n    if (\n      (props.userData.projectManager.length > 0) |\n      (props.userData.analyst.length > 0)\n    ) {\n      const cardToAdd = props.data.filter(\n        (item) => item.label === \"projectManager\"\n      );\n      portalCardData.push(...cardToAdd);\n    }\n\n    if (props.userData.administrator === true) {\n      const cardToAdd = props.data.filter(\n        (item) => item.label === \"administrator\"\n      );\n      portalCardData.push(...cardToAdd);\n    }\n\n    if (\n      (props.userData.researcher.length > 0) |\n      (props.userData.basic === true)\n    ) {\n      const cardToAdd = props.data.filter(\n        (item) => item.label === \"globalData\"\n      );\n      portalCardData.push(...cardToAdd);\n    }\n    if (props.userData.basic === true) {\n      const cardToAdd = props.data.filter((item) => item.label === \"help\");\n      portalCardData.push(...cardToAdd);\n    }\n  }\n\n  if (!props.userData) {\n    portalCardData.push(props.data[0]);\n  }\n\n  return (\n    <>\n      {portalCardData.map((PortalItem) => {\n        return (\n          <PortalCard\n            data={PortalItem}\n            authToken={props.authToken}\n            key={PortalItem.label}\n          />\n        );\n      })}\n    </>\n  );\n}\n\nexport default function PortalComponent() {\n  const [userData, setUserData] = useState(null);\n  const [useInfoAvail, setUserInfoAvail] = useState(false);\n  const history = useHistory();\n  const [authToken, setAuthToken] = useContext(AuthContext);\n\n  useEffect(async () => {\n    async function CheckLoggedIn() {\n      const logged_in = await CheckForLocalToken({\n        setAuthToken: setAuthToken,\n      });\n      if (logged_in == false) {\n        history.push(\"/logout\");\n      }\n    }\n\n    CheckLoggedIn();\n  }, []);\n\n  useEffect(async () => {\n    const newUserData = await FetchProjectInformation(authToken);\n    setUserData(newUserData);\n    setUserInfoAvail(true);\n  }, [authToken]);\n\n  return (\n    <MainCard\n      CardTitle=\"Home\"\n      filters={[]}\n      history={null}\n      back_link={null}\n      doc_extension=\"source/user-guide/first-time-user.html#rhomis-portal\"\n      CardBody={RenderPortalCards({\n        data: PortalDataAll,\n        userData: userData,\n        authToken: authToken,\n      })}\n    ></MainCard>\n  );\n}\n","// Copyright (C) 2022 Léo Gorman\n// \n// This file is part of rhomis-data-app.\n// \n// rhomis-data-app is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n// \n// rhomis-data-app is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n// \n// You should have received a copy of the GNU General Public License\n// along with rhomis-data-app.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { createContext } from 'react';\n\nconst UserContext = createContext()\n\nexport default UserContext;","import React, { useState, useEffect, useContext } from \"react\";\nimport { Form, Button, Card, Table } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport AuthContext from \"../authentication-component/AuthContext\";\nimport UserContext from \"../user-info-component/UserContext\";\nimport \"./project-management-component.css\";\nimport \"../../App.css\";\n\nimport { Store } from \"react-notifications-component\";\nimport Spinner from \"react-bootstrap\";\n\nimport MainCard from \"../main-card-component/main-card-component\";\n\nimport { useHistory } from \"react-router\";\n\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\n\nimport QRCode from \"react-qr-code\";\nimport { deflateSync } from \"zlib\";\n\nimport {\n  FetchUserInformation,\n  CheckForLocalToken,\n} from \"../fetching-context-info/fetching-context-info\";\n\nasync function CreateProject(props) {\n  props.setLoading(true);\n\n  // console.log(props.projectName);\n  // console.log(props.authToken);\n\n  Store.addNotification({\n    title: \"Creating Project\",\n    type: \"default\",\n    insert: \"top\",\n    container: \"top-right\",\n    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n    dismiss: {\n      duration: 2000,\n    },\n  });\n  try {\n    const projectCreationResponse = await axios({\n      method: \"post\",\n      url: process.env.REACT_APP_AUTHENTICATOR_URL + \"api/projects/create\",\n      data: {\n        name: props.projectName,\n        description: props.projectDescription,\n      },\n      headers: {\n        Authorization: props.authToken,\n      },\n    });\n\n    if (projectCreationResponse.status === 200) {\n      Store.addNotification({\n        title: \"Success\",\n        message: \"Project Created\",\n        type: \"success\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 2000,\n        },\n      });\n    }\n    return projectCreationResponse;\n  } catch (err) {\n    // console.log(err.response);\n    Store.addNotification({\n      title: \"Error\",\n      message: err.response.data,\n      type: \"danger\",\n      insert: \"top\",\n      container: \"top-right\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 2000,\n      },\n    });\n  }\n\n  // Create project\n\n  props.setLoading(false);\n\n  return;\n}\n\nfunction NoProjectFound(props) {\n  return (\n    <div>\n      <Table style={{ width: \"100%\" }} striped bordered hover>\n        <thead key=\"table-header\">\n          <tr key=\"table-row-1\">\n            <th key=\"table-head-item-1\">Project Name</th>\n            <th key=\"table-head-item-2\">Description</th>\n            <th key=\"table-head-item-3\">Created at</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td style={{ textAlign: \"center\" }} colSpan={3}>\n              No projects found\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n\n      <div style={{ display: \"inline-grid\", width: \"100%\" }}>\n        <div style={{ marginLeft: \"auto\", marginRight: 0 }}>\n          <Button\n            type=\"submit\"\n            className=\"bg-dark border-0\"\n            onClick={async () => {\n              await FetchUserInformation({\n                authToken: props.authToken,\n                setUserInfo: props.setAdminData,\n              });\n            }}\n          >\n            New Project\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction RenderProjectInformation(props) {\n  const history = useHistory();\n\n  const [newProjectName, setNewProjectName] = useState();\n  const [newProjectDescription, setNewProjectDescription] = useState();\n\n  const [loading, setLoading] = useState(false);\n\n  // console.log(props);\n  if (!props.data) {\n    return (\n      <NoProjectFound\n        authToken={props.authToken}\n        setAdminData={props.setAdminData}\n      />\n    );\n  }\n\n  if (!props.data.projects) {\n    return (\n      <NoProjectFound\n        authToken={props.authToken}\n        setAdminData={props.setAdminData}\n      />\n    );\n  }\n\n  if (props.data.projects.length === 0) {\n    return (\n      <NoProjectFound\n        authToken={props.authToken}\n        setAdminData={props.setAdminData}\n      />\n    );\n  }\n\n  if (props.data.projects !== undefined) {\n    return (\n      <div style={{ width: \"100%\" }}>\n        <Table style={{ width: \"100%\" }} striped bordered hover>\n          <thead key=\"table-header\">\n            <tr key=\"table-row-1\">\n              <th key=\"table-head-item-1\">Project Name</th>\n              <th key=\"table-head-item-2\">Description</th>\n              <th key=\"table-head-item-3\">Created at</th>\n              <th key=\"table-head-item-4\"></th>\n            </tr>\n          </thead>\n          <tbody key=\"table-body\">\n            {props.data.projects.map((project, index) => {\n              let date = new Date(project.createdAt);\n              let dateString = date.toDateString();\n              return (\n                <tr key={\"table-row-\" + index}>\n                  <td\n                    style={{ verticalAlign: \"middle\" }}\n                    key={\"table-row-\" + index + \"-item-1\"}\n                  >\n                    {project.name}\n                  </td>\n                  <td\n                    style={{ verticalAlign: \"middle\" }}\n                    key={\"table-row-\" + index + \"-item-2\"}\n                  >\n                    {project.description}\n                  </td>\n                  <td\n                    style={{ verticalAlign: \"middle\" }}\n                    key={\"table-row-\" + index + \"-item-3\"}\n                  >\n                    {dateString}\n                  </td>\n                  <td\n                    style={{\n                      verticalAlign: \"middle\",\n                      textAlign: \"center\",\n                    }}\n                    key={\"table-row-\" + index + \"-item-4\"}\n                  >\n                    <Button\n                      className=\"bg-dark text-white border-0\"\n                      onClick={() => {\n                        history.push(\"/projects/\" + project.name);\n                      }}\n                    >\n                      Select\n                    </Button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n\n        <div style={{ display: \"inline-grid\", width: \"100%\" }}>\n          <div style={{ marginLeft: \"auto\", marginRight: 0 }}>\n            <Form style={{ marginBottom: \"10px\", marginRight: 0 }}>\n              <Form.Group>\n                <Form.Label>\n                  <strong>New Project Name</strong>\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"New Project\"\n                  onChange={(e) => {\n                    setNewProjectName(e.target.value);\n                  }}\n                />\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>\n                  <strong>Project Description</strong>\n                </Form.Label>\n                <Form.Control\n                  type=\"textarea\"\n                  placeholder=\"A short description...\"\n                  rows={3}\n                  onChange={(e) => {\n                    setNewProjectDescription(e.target.value);\n                  }}\n                />\n              </Form.Group>\n            </Form>\n            <div style={{ display: \"inline-grid\", width: \"100%\" }}>\n              <div style={{ marginLeft: \"auto\", marginRight: 0 }}>\n                <Button\n                  type=\"submit\"\n                  className=\"bg-dark border-0\"\n                  onClick={async () => {\n                    await CreateProject({\n                      authToken: props.authToken,\n                      projectName: newProjectName,\n                      projectDescription: newProjectDescription,\n                      setLoading: setLoading,\n                    });\n\n                    setLoading(true);\n                    await FetchUserInformation({\n                      authToken: props.authToken,\n                      setUserInfo: props.setAdminData,\n                    });\n                    setLoading(true);\n                  }}\n                >\n                  Add Project\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default function ProjectManagementComponent(props) {\n  const history = useHistory();\n\n  const [authToken, setAuthToken] = useContext(AuthContext);\n\n  const [adminData, setAdminData] = useContext(UserContext);\n\n  const [projectSelected, setProjectSelected] = useState(false);\n  useEffect(async () => {\n    async function CheckLoggedIn() {\n      const logged_in = await CheckForLocalToken({\n        setAuthToken: setAuthToken,\n      });\n      if (logged_in == false) {\n        history.push(\"/logout\");\n      }\n    }\n\n    CheckLoggedIn();\n  }, []);\n\n  useEffect(async () => {\n    // console.log(\"Effect running\");\n    await FetchUserInformation({\n      authToken: authToken,\n      setUserInfo: setAdminData,\n    });\n  }, [authToken]);\n\n  return (\n    <>\n      <MainCard\n        CardTitle=\"Select a Project\"\n        filters={[]}\n        history={history}\n        back_link={\"/\"}\n        doc_extension=\"source/user-guide/navigating-the-app.html#project-management\"\n        CardBody={RenderProjectInformation({\n          data: adminData,\n          setProjectSelected: setProjectSelected,\n          authToken: authToken,\n          setAdminData: setAdminData,\n        })}\n      ></MainCard>\n    </>\n  );\n}\n","import { useParams } from \"react-router-dom\";\nimport { FetchUserInformation } from \"../fetching-context-info/fetching-context-info\";\nimport { Spinner } from \"react-bootstrap\";\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Button, Card, Table, DropdownButton, Dropdown } from \"react-bootstrap\";\n\nimport axios from \"axios\";\nimport AuthContext from \"../authentication-component/AuthContext\";\nimport UserContext from \"../user-info-component/UserContext\";\nimport \"../project-management-component/project-management-component.css\";\nimport \"./form-management-component.css\";\nimport \"../../App.css\";\n\nimport { CheckForLocalToken } from \"../fetching-context-info/fetching-context-info\";\n\nimport { useHistory } from \"react-router\";\n\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\n\nimport MainCard from \"../main-card-component/main-card-component\";\n\n/*\n Format date so it appears correctly\n */\nfunction formatDate(date) {\n  var d = new Date(date),\n    month = \"\" + (d.getMonth() + 1),\n    day = \"\" + d.getDate(),\n    year = d.getFullYear();\n\n  if (month.length < 2) month = \"0\" + month;\n  if (day.length < 2) day = \"0\" + day;\n\n  return [day, month, year].join(\"/\");\n}\n\nfunction NoInfoFound(props) {\n  return (\n    <>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Form Name</th>\n            <th>Status</th>\n\n            <th>Created At</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td colSpan={3}>Forms Not Found</td>\n          </tr>\n        </tbody>\n      </Table>\n      <ProjectNewForm\n        authToken={props.authToken}\n        projectSelected={props.projectSelected}\n      />\n    </>\n  );\n}\n\n// Render the Submission Count\nfunction SubmissionsCount(props) {\n  let submissions = \"\";\n\n  if (props.form === undefined) {\n    return (\n      <>\n        <Spinner\n          as=\"span\"\n          animation=\"border\"\n          size=\"sm\"\n          role=\"status\"\n          aria-hidden=\"true\"\n        />\n      </>\n    );\n  }\n  if (props.form.submissions === undefined) {\n    return (\n      <>\n        <Spinner\n          as=\"span\"\n          animation=\"border\"\n          size=\"sm\"\n          role=\"status\"\n          aria-hidden=\"true\"\n        />\n      </>\n    );\n  }\n\n  if (props.draftOrLive === \"draft\") {\n    submissions = props.form.submissions.draft;\n  }\n\n  if (props.draftOrLive === \"live\") {\n    submissions = props.form.submissions.live;\n  }\n  // console.log(\"Submissions props\");\n\n  // console.log(props);\n  // console.log(submissions);\n  if (submissions === null) {\n    submissions = \"NA\";\n  }\n\n  return (\n    <>\n      {props.submissionsLoading ? (\n        <Spinner\n          as=\"span\"\n          animation=\"border\"\n          size=\"sm\"\n          role=\"status\"\n          aria-hidden=\"true\"\n        />\n      ) : (\n        submissions\n      )}\n    </>\n  );\n}\n\nasync function FinalizeForm(props) {\n  // console.log(\"Finalizing form\");\n  // console.log(props);\n  const result = await axios({\n    method: \"post\",\n    url: process.env.REACT_APP_AUTHENTICATOR_URL + \"api/forms/publish\",\n    headers: {\n      Authorization: props.authToken,\n    },\n    params: {\n      form_name: props.form,\n      project_name: props.project,\n    },\n  });\n}\n\n// Render the options button for each form\nfunction FormOptions(props) {\n  // console.log(\"Form Options Props\");\n  // console.log(props);\n\n  let render_live = false;\n  let render_draft = false;\n  let edit_published = false;\n\n  if (props.form == undefined) {\n    return <></>;\n  }\n\n  if (props.form.submissions == undefined) {\n    return <></>;\n  }\n\n  if (props.form.live === true) {\n    render_live = true;\n  }\n\n  if (props.form.draft === true) {\n    render_draft = true;\n  }\n\n  if ((props.form.draft === false) & (props.form.live === true)) {\n    edit_published = true;\n  }\n\n  return (\n    <>\n      <DropdownButton\n        title=\"Options\"\n        variant=\"dark\"\n        menuVariant=\"dark\"\n        className=\"border-0\"\n        drop=\"end\"\n      >\n        {/* LIVE FORMS OPTIONS */}\n        {render_live ? (\n          <>\n            <Dropdown.Header>Live Forms</Dropdown.Header>\n\n            <Dropdown.Item\n              className=\"dark text-white border-0\"\n              onClick={() => {\n                props.history.push(\n                  \"/projects/\" +\n                    props.projectSelected +\n                    \"/forms/\" +\n                    props.form.name +\n                    \"/collect/live\"\n                );\n              }}\n            >\n              Collect Data\n            </Dropdown.Item>\n\n            <form\n              method=\"post\"\n              action={process.env.REACT_APP_SURVEY_BUILDER_URL}\n              className=\"inline\"\n            >\n              <input type=\"hidden\" name=\"token\" value={props.authToken} />\n              <input\n                type=\"hidden\"\n                name=\"redirect_url\"\n                // New endpoint for survey builder\n\n                value={\"/xlsform/\" + props.form.name + \"/edit\"}\n              />\n\n              {/* Edit Published Form */}\n\n              {edit_published ? (\n                <button type=\"submit\" value=\"submit\" className=\"form-button\">\n                  Create New Draft\n                </button>\n              ) : (\n                <></>\n              )}\n            </form>\n\n            {props.form.submissions.live > 0 ? (\n              <Dropdown.Item\n                className=\"dark text-white border-0\"\n                onClick={() => {\n                  props.history.push(\n                    \"/projects/\" +\n                      props.projectSelected +\n                      \"/forms/\" +\n                      props.form.name +\n                      \"/data\"\n                  );\n                }}\n              >\n                Access Data\n              </Dropdown.Item>\n            ) : (\n              <></>\n            )}\n          </>\n        ) : (\n          <></>\n        )}\n\n        {render_draft ? (\n          <>\n            <Dropdown.Header>Draft Forms</Dropdown.Header>\n\n            <Dropdown.Item\n              className=\"dark text-white border-0\"\n              onClick={() => {\n                props.history.push(\n                  \"/projects/\" +\n                    props.projectSelected +\n                    \"/forms/\" +\n                    props.form.name +\n                    \"/collect/draft\"\n                );\n              }}\n            >\n              Test Survey\n            </Dropdown.Item>\n            <form\n              method=\"post\"\n              action={process.env.REACT_APP_SURVEY_BUILDER_URL}\n              className=\"inline\"\n            >\n              <input type=\"hidden\" name=\"token\" value={props.authToken} />\n              <input\n                type=\"hidden\"\n                name=\"redirect_url\"\n                value={\"/xlsform/\" + props.form.name + \"/edit\"}\n              />\n              <button type=\"submit\" value=\"submit\" className=\"form-button\">\n                Edit Draft\n              </button>\n            </form>\n          </>\n        ) : (\n          <></>\n        )}\n        <Dropdown.Header>Settings</Dropdown.Header>\n\n        <Dropdown.Item\n          className=\"dark text-white border-0\"\n          onClick={() => {\n            props.history.push(\n              \"/projects/\" +\n                props.projectSelected +\n                \"/forms/\" +\n                props.form.name +\n                \"/users\"\n            );\n          }}\n        >\n          Manage Users\n        </Dropdown.Item>\n      </DropdownButton>\n    </>\n  );\n}\n\n// A table for all of the\n// forms\nfunction FormTables(props) {\n  const history = useHistory();\n\n  // Don't allow users to finalize from this table\n  let allowToFinalize = false;\n\n  // Checking whether or not\n  // the component is has all of the\n  // form data needed for the table\n  if (!props.data) {\n    return <NoInfoFound authToken={props.authToken} />;\n  }\n  if (!props.data.user) {\n    return <NoInfoFound authToken={props.authToken} />;\n  }\n  if (!props.data.user.roles) {\n    return <NoInfoFound authToken={props.authToken} />;\n  }\n  if (props.data.user.roles.projectManager !== undefined) {\n    if (props.data.user.roles.projectManager.includes(props.projectSelected))\n      allowToFinalize = true;\n  }\n\n  // Filtering through the forms based on\n  // URL parameters. Passed through props.\n  let formsExist = false;\n\n  if (props.data.forms !== undefined) {\n    if (props.data.forms.length > 0) {\n      let formsForProject = props.data.forms.filter(\n        (form) => form.project === props.projectSelected\n      );\n      formsExist = formsForProject.length > 0;\n    }\n  }\n\n  return (\n    <>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Form Name</th>\n            <th>Draft Version</th>\n            <th>Draft Submissions</th>\n\n            <th>Live Version</th>\n            <th>Live Submissions</th>\n\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {formsExist ? (\n            props.data.forms.map((form) => {\n              let draft_version = \"NA\";\n              if (form.draft) {\n                draft_version = form.draftVersion;\n              }\n\n              if (\n                (form.draftVersion === undefined) |\n                (form.draftVersion === \"\") |\n                (form.draftVersion === null)\n              ) {\n                draft_version = \"NA\";\n              }\n\n              let live_version = \"NA\";\n              if (form.live) {\n                live_version = form.liveVersion;\n              }\n\n              if (\n                (form.liveVersion === undefined) |\n                (form.liveVersion === \"\") |\n                (form.liveVersion === null)\n              ) {\n                live_version = \"NA\";\n              }\n\n              // let date = new Date(form.createdAt)\n              let dateString = formatDate(form.createdAt);\n              if (form.project === props.projectSelected) {\n                let disableButton = true;\n\n                let accessData = false;\n\n                if (allowToFinalize === false) {\n                  disableButton = false;\n                }\n\n                if (form.draft) {\n                  disableButton = false;\n                }\n\n                if (form.submissions > 0) {\n                  accessData = true;\n                }\n\n                return (\n                  <tr key={form.name}>\n                    <td>{form.name}</td>\n                    <td>{draft_version}</td>\n                    <td>\n                      <SubmissionsCount\n                        submissionsLoading={props.submissionsLoading}\n                        form={form}\n                        draftOrLive=\"draft\"\n                      />\n                    </td>\n\n                    <td>{live_version}</td>\n\n                    <td>\n                      <SubmissionsCount\n                        submissionsLoading={props.submissionsLoading}\n                        form={form}\n                        draftOrLive=\"live\"\n                      />\n                    </td>\n\n                    <td style={{ textAlign: \"center\" }}>\n                      <FormOptions\n                        history={history}\n                        form={form}\n                        projectSelected={props.projectSelected}\n                        authToken={props.authToken}\n                        accessData={accessData}\n                      />\n                    </td>\n                  </tr>\n                );\n              }\n            })\n          ) : (\n            <>\n              <tr>\n                <td style={{ textAlign: \"center\" }} colSpan={5}>\n                  No forms created yet\n                </td>\n              </tr>\n            </>\n          )}\n          {/* <tr><td style={{ \"textAlign\": \"center\" }} colSpan={5}><a href=\"https://rhomis-survey.stats4sdtest.online\"><Button >Start Creating a Survey</Button></a></td></tr></>} */}\n        </tbody>\n      </Table>\n      <ProjectNewForm\n        authToken={props.authToken}\n        projectSelected={props.projectSelected}\n      />\n    </>\n  );\n}\n\nfunction RenderProjectAdmin(props) {\n  let renderUserForm = false;\n\n  const [newUser, setNewUser] = useState(\"\");\n\n  if (!props.data) {\n    return <NoInfoFound />;\n  }\n  if (!props.data.user) {\n    return <NoInfoFound />;\n  }\n  if (!props.data.user.roles) {\n    return <NoInfoFound />;\n  }\n\n  if (props.data.user.roles.projectManager !== undefined) {\n    if (props.data.user.roles.projectManager.includes(props.projectSelected))\n      renderUserForm = true;\n  }\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      {/* <Card.Title>Special title treatment</Card.Title> */}\n      <FormTables\n        submissionsLoading={props.submissionsLoading}\n        projectSelected={props.projectSelected}\n        authToken={props.authToken}\n        setAdminData={props.setAdminData}\n        data={props.data}\n        filters={props.filters}\n        setFilters={props.setFilters}\n        setFormSelected={props.setFormSelected}\n      />\n    </div>\n  );\n}\n\nfunction FormManagementComponent() {\n  // const { projectName } = useParams()\n\n  const history = useHistory();\n  const projectSelected = useParams().projectName;\n  const [authToken, setAuthToken] = useContext(AuthContext);\n  const [adminData, setAdminData] = useContext(UserContext);\n\n  const [submissionsLoading, setSubmissionLoading] = useState(true);\n\n  const [formData, setFormData] = useState();\n\n  // console.log(\"admin data\");\n  // console.log(adminData);\n\n  const [formSelected, setFormSelected] = useState(null);\n  const [filters, setFilters] = useState([]);\n  const data = null;\n\n  useEffect(() => {\n    async function CheckLoggedIn() {\n      const logged_in = await CheckForLocalToken({\n        setAuthToken: setAuthToken,\n      });\n      if (logged_in == false) {\n        history.push(\"/logout\");\n      }\n    }\n\n    CheckLoggedIn();\n  }, []);\n\n  useEffect(async () => {\n    // console.log(\"projectSelected:  \" + projectSelected);\n\n    async function GetUserInfo() {\n      await FetchUserInformation({\n        authToken: authToken,\n        setUserInfo: setAdminData,\n        getSubmissionCount: true,\n        projectName: projectSelected,\n      });\n\n      setSubmissionLoading(false);\n    }\n\n    GetUserInfo();\n  }, [authToken]);\n\n  return (\n    <>\n      <MainCard\n        CardTitle=\"Form Overview\"\n        filters={[projectSelected]}\n        history={history}\n        back_link=\"/projects\"\n        doc_extension=\"source/user-guide/navigating-the-app.html#form-overview\"\n        CardBody={RenderProjectAdmin({\n          authToken: authToken,\n          projectSelected: projectSelected,\n          formSelected: formSelected,\n          setAdminData: setAdminData,\n          data: adminData,\n          setFormSelected: setFormSelected,\n          filters: filters,\n          setFilters: setFilters,\n          submissionsLoading: submissionsLoading,\n        })}\n      ></MainCard>\n    </>\n  );\n}\n\n// Create New form for this project button\nfunction ProjectNewForm(props) {\n  return (\n    <form\n      method=\"post\"\n      action={process.env.REACT_APP_SURVEY_BUILDER_URL}\n      className=\"inline\"\n    >\n      <input type=\"hidden\" name=\"project_name\" value={props.projectSelected} />\n      <input type=\"hidden\" name=\"token\" value={props.authToken} />\n      <input type=\"hidden\" name=\"redirect_url\" value=\"/admin/xlsform/create\" />\n      <div style={{ display: \"inline-grid\", width: \"100%\" }}>\n        <div style={{ marginLeft: \"auto\", marginRight: 0 }}>\n          <Button type=\"submit\" className=\"bg-dark border-0\">\n            New Form\n          </Button>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default FormManagementComponent;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Container, Navbar, Nav, Offcanvas, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport AuthContext from \"../authentication-component/AuthContext\";\nimport { MdOutlineMenu } from \"react-icons/md\";\nimport { AiOutlineHome } from \"react-icons/ai\";\nimport axios from \"axios\";\n\nimport \"./navigation-bar-component.css\";\n/*\nSetting up a standard react navbar to navigation component. Please\nnote that if you want to maintain state or context between routes,\nyou must use the 'react-router-dom' \"link\". I have integrated\nthis with the Nav.Link component\n*/\n\nasync function GetAdminData(props) {\n  const result = await axios({\n    method: \"post\",\n    url: process.env.REACT_APP_AUTHENTICATOR_URL + \"api/meta-data\",\n    headers: {\n      Authorization: props.authToken,\n    },\n  });\n\n  if (result.status === 200) {\n    if (result.data.projects.length > 0) {\n      props.setShowProjectManagement(true);\n    }\n    if (result.data.user.roles.administrator === true) {\n      props.setShowAdmin(true);\n    }\n    if (result.data.user.roles.dataCollector.length > 0) {\n      props.setShowCollectData(true);\n    }\n  }\n  if (result.status === 400) {\n    alert(result.data);\n  }\n}\n\nexport default function MainNavbar(props) {\n  // props.Logout()\n  const [authToken, setAuthToken] = useContext(AuthContext);\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = async () => setShow(true);\n  const [showAdmin, setShowAdmin] = useState(false);\n  const [showCollectData, setShowCollectData] = useState(false);\n  const [showProjectManagement, setShowProjectManagement] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(async () => {\n    await GetAdminData({\n      authToken: authToken,\n      setShowAdmin: setShowAdmin,\n      setShowCollectData: setShowCollectData,\n      setShowProjectManagement: setShowProjectManagement,\n    });\n  }, []);\n\n  return (\n    <>\n      <Navbar fixed=\"top\" bg=\"dark\" variant=\"dark\" expand=\"false\">\n        {/* <Container fluid> */}\n        <Nav.Link className=\"menu-button\" as={Link} to=\"/home\">\n          <AiOutlineHome className=\"menu-button-icon\" size={30} />\n        </Nav.Link>\n        {/* <div className=\"menu-button\" onClick={handleShow}><AiOutlineHome className=\"menu-button-icon\" size={30} /></div> */}\n        <h2 style={{ color: \"white\" }}>RHoMIS</h2>\n\n        <Nav.Link className=\"logout-button\" as={Link} to=\"/logout\">\n          Logout\n        </Nav.Link>\n\n        <Offcanvas\n          backdrop=\"true\"\n          style={{ \"background-color\": \"#212529\", width: \"25%\" }}\n          id=\"offcanvasNavbar\"\n          aria-labelledby=\"offcanvasNavbarLabel\"\n          placement=\"start\"\n          show={show}\n          onHide={handleClose}\n        >\n          <Offcanvas.Header\n            closeVariant=\"white\"\n            closeButton\n            style={{ color: \"white\", \"background-color\": \"#212529\" }}\n          >\n            <Offcanvas.Title id=\"offcanvasNavbarLabel\">\n              <h2 style={{ \"padding-left\": \"20px\" }}>Dashboard</h2>\n            </Offcanvas.Title>\n          </Offcanvas.Header>\n          <div className=\"side-bar-container\">\n            <div className=\"side-bar-item\">\n              <Nav.Link\n                className=\"side-bar-link\"\n                as={Link}\n                onClick={() => {\n                  handleClose();\n                }}\n                to=\"/\"\n              >\n                Portal\n              </Nav.Link>\n            </div>\n            <div className=\"side-bar-item\">\n              <form\n                style={{ width: \"100%\" }}\n                method=\"post\"\n                action={process.env.REACT_APP_SURVEY_BUILDER_URL}\n                className=\"inline\"\n              >\n                <input type=\"hidden\" name=\"token\" value={authToken} />\n                <input\n                  type=\"hidden\"\n                  name=\"redirect_url\"\n                  value=\"/admin/xlsform/create\"\n                />\n                <input\n                  className=\"form-link\"\n                  type=\"submit\"\n                  value=\"Build a Survey\"\n                />\n              </form>\n            </div>\n\n            {showProjectManagement ? (\n              <div className=\"side-bar-item\">\n                <Nav.Link\n                  className=\"side-bar-link\"\n                  as={Link}\n                  onClick={() => {\n                    handleClose();\n                  }}\n                  to=\"/projects\"\n                >\n                  Manage Projects\n                </Nav.Link>\n              </div>\n            ) : (\n              <></>\n            )}\n\n            {showAdmin ? (\n              <div className=\"side-bar-item\">\n                <Nav.Link\n                  className=\"side-bar-link\"\n                  as={Link}\n                  onClick={() => {\n                    handleClose();\n                  }}\n                  to=\"/administration\"\n                >\n                  Administration\n                </Nav.Link>\n              </div>\n            ) : (\n              <></>\n            )}\n            <div className=\"side-bar-item\">\n              <Nav.Link\n                className=\"side-bar-link\"\n                as={Link}\n                to=\"/login\"\n                onClick={() => {\n                  setAuthToken(null);\n                  localStorage.clear();\n                }}\n              >\n                Logout\n              </Nav.Link>\n            </div>\n          </div>\n        </Offcanvas>\n      </Navbar>\n    </>\n  );\n}\n","// Copyright (C) 2022 Léo Gorman\n//\n// This file is part of rhomis-data-app.\n//\n// rhomis-data-app is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// rhomis-data-app is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with rhomis-data-app.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport {\n  Card,\n  Form,\n  Accordion,\n  Button,\n  Table,\n  Row,\n  Col,\n} from \"react-bootstrap\";\n\nimport \"./form-creation-component.css\";\nimport \"../../App.css\";\n\nimport axios from \"axios\";\n\nimport AuthContext from \"../authentication-component/AuthContext\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { CheckForLocalToken } from \"../fetching-context-info/fetching-context-info\";\n\nasync function GetProjectInformation(props) {\n  // console.log(\"authToken: \", props.authToken);\n  const result = await axios({\n    method: \"post\",\n    url: process.env.REACT_APP_AUTHENTICATOR_URL + \"api/meta-data\",\n    headers: {\n      Authorization: props.authToken,\n    },\n  });\n\n  // console.log(\"response: \");\n  // console.log(result);\n  if (result.status === 200) {\n    // console.log(\"Setting project information\");\n    // console.log(result.data);\n    props.setProjectInformation(result.data);\n  }\n  if (result.status === 400) {\n    alert(result.data);\n  }\n}\n\nasync function CreateProject(authToken, projectName, projectDescription) {\n  // console.log(projectName);\n  // console.log(authToken);\n\n  // Create project\n  const projectCreationResponse = await axios({\n    method: \"post\",\n    url: process.env.REACT_APP_AUTHENTICATOR_URL + \"api/projects/create\",\n    data: {\n      name: projectName,\n      description: projectDescription,\n    },\n    headers: {\n      Authorization: authToken,\n    },\n  });\n\n  return projectCreationResponse;\n}\n\nasync function DeleteProject(authToken, projectName) {\n  // console.log(projectName);\n  // console.log(authToken);\n\n  // Create project\n  const projectCreationResponse = await axios({\n    method: \"delete\",\n    url: process.env.REACT_APP_AUTHENTICATOR_URL + \"api/projects/delete\",\n    data: {\n      name: projectName,\n    },\n    headers: {\n      Authorization: authToken,\n    },\n  });\n\n  return projectCreationResponse;\n}\n\nasync function CreateForm(\n  authToken,\n  projectName,\n  formName,\n  formVersion,\n  formFile\n) {\n  // console.log(projectName);\n  console.log(\n    process.env.REACT_APP_AUTHENTICATOR_URL +\n      \"api/forms/new?form_name=\" +\n      formName +\n      \"&project_name=\" +\n      projectName +\n      \"&publish=false\"\n  );\n\n  // Create form\n  const formCreationResponse = await axios({\n    method: \"post\",\n    url:\n      process.env.REACT_APP_AUTHENTICATOR_URL +\n      \"api/forms/new?form_name=\" +\n      formName +\n      \"&project_name=\" +\n      projectName +\n      \"&publish=false\",\n    data: formFile,\n    headers: {\n      Authorization: authToken,\n      \"Content-Type\":\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n    },\n  });\n  return formCreationResponse;\n}\n\nasync function UpdateForm(props) {\n  // Create form\n  const formCreationResponse = await axios({\n    method: \"post\",\n    url:\n      process.env.REACT_APP_AUTHENTICATOR_URL +\n      \"api/forms/new-draft?form_name=\" +\n      props.formName +\n      \"&project_name=\" +\n      props.projectName +\n      \"&publish=false\",\n    data: props.formFile,\n    headers: {\n      Authorization: props.authToken,\n      \"Content-Type\":\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n    },\n  });\n  return formCreationResponse;\n}\n\n// Form to create a new empty project\nfunction CreateProjectForm(props) {\n  return (\n    <>\n      <Form>\n        <Form.Group>\n          <Form.Label>Project Name</Form.Label>\n          <Form.Control\n            type=\"text\"\n            onChange={(event) => {\n              props.setNewProjectName(event.target.value);\n            }}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Project Description</Form.Label>\n          <Form.Control\n            as=\"textarea\"\n            rows={3}\n            onChange={(event) => {\n              props.setNewProjectDescription(event.target.value);\n            }}\n          />\n        </Form.Group>\n      </Form>\n      <Button\n        style={{ textAlign: \"right\" }}\n        onClick={async () => {\n          await CreateProject(\n            props.authToken,\n            props.newProjectName,\n            props.newProjectDescription\n          );\n          await props.GetProjectInformation({\n            authToken: props.authToken,\n            setProjectInformation: props.setProjectInformation,\n          });\n        }}\n      >\n        Add project\n      </Button>\n    </>\n  );\n}\n\n// Create a new form within a project\n// (i.e a form that does not exist already in\n// in the db).\nfunction CreateNewBlankForm(props) {\n  // console.log(\"Draft form data\");\n\n  const [formList, setFormList] = useState([]);\n\n  // console.log(props.data);\n  let projectList = [\"No Projects\"];\n  let projectDisabled = true;\n\n  if ((props.data !== undefined) & (props.data !== null)) {\n    if (props.data.projects !== undefined) {\n      projectList = props.data.projects.map((project) => {\n        return project.name;\n      });\n      projectDisabled = false;\n    }\n\n    if (props.data.projects.length === 0) {\n      projectList = [\"No Projects\"];\n      projectDisabled = true;\n    }\n  }\n  // console.log(projectList);\n\n  // console.log(props.data);\n\n  return (\n    <>\n      <Form>\n        <Form.Group>\n          <Form.Label>Select a Project</Form.Label>\n          <Form.Select\n            defaultValue=\"Select a Project\"\n            onChange={(event) => {\n              props.setSelectedDraftProject(event.target.value);\n\n              const newFormList = [];\n              if ((props.data !== undefined) & (props.data !== null)) {\n                if (props.data.forms !== undefined) {\n                  props.data.forms.map((form) => {\n                    if (\n                      (form.project === event.target.value) &\n                      (form.live === false)\n                    ) {\n                      newFormList.push(form.name);\n                    }\n                  });\n                  setFormList(newFormList);\n                }\n\n                if (props.data.projects.length === 0) {\n                  setFormList([]);\n                }\n              }\n            }}\n            disabled={projectDisabled}\n            aria-label=\"Default select example\"\n          >\n            <option disabled={true}>Select a Project</option>\n            {projectList.map((option) => {\n              return <option>{option}</option>;\n            })}\n          </Form.Select>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Enter the name of the form</Form.Label>\n          <Form.Control\n            onChange={(event) => {\n              props.setNewFormName(event.target.value);\n            }}\n          />\n          <Form.Text>\n            This must match the \"form_title\" field in your xlsx form settings\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Enter the form version</Form.Label>\n          <Form.Control\n            onChange={(event) => {\n              props.setNewFormVersion(event.target.value);\n            }}\n          />\n\n          <Form.Text>\n            This must match the \"version\" field in your xlsx settings tab\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"file-select-blank-form\">\n          <Form.Label>Select your file</Form.Label>\n          <Form.Control\n            type=\"file\"\n            size=\"lg\"\n            onChange={(e) => {\n              e.stopPropagation();\n              props.setSelectedFile(e.target.files[0]);\n            }}\n          />\n        </Form.Group>\n        <Button\n          onClick={async () => {\n            await CreateForm(\n              props.authToken,\n              props.selectedProject,\n              props.newFormName,\n              props.newFormVersion,\n              props.selectedFile\n            );\n            await props.GetProjectInformation({\n              authToken: props.authToken,\n              setProjectInformation: props.setProjectInformation,\n            });\n          }}\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n}\n\nfunction UpdateDraftForm(props) {\n  // console.log(\"Draft form data\");\n\n  const [formList, setFormList] = useState([]);\n\n  // console.log(props.data);\n  let projectList = [\"No Projects\"];\n  let projectDisabled = true;\n\n  if ((props.data !== undefined) & (props.data !== null)) {\n    if (props.data.projects !== undefined) {\n      projectList = props.data.projects.map((project) => {\n        return project.name;\n      });\n      projectDisabled = false;\n    }\n\n    if (props.data.projects.length === 0) {\n      projectList = [\"No Projects\"];\n      projectDisabled = true;\n    }\n  }\n  // console.log(projectList);\n\n  // console.log(props.data);\n\n  return (\n    <>\n      <Form>\n        <Form.Group>\n          <Form.Label>\n            Select the project containing the form you would like to update\n          </Form.Label>\n          <Form.Select\n            defaultValue=\"Select a Project\"\n            onChange={(event) => {\n              props.setSelectedDraftProject(event.target.value);\n\n              const newFormList = [];\n              if ((props.data !== undefined) & (props.data !== null)) {\n                if (props.data.forms !== undefined) {\n                  props.data.forms.map((form) => {\n                    if (form.project === event.target.value) {\n                      newFormList.push(form);\n                    }\n                  });\n                  setFormList(newFormList);\n                }\n\n                if (props.data.projects.length === 0) {\n                  setFormList([]);\n                }\n              }\n            }}\n            disabled={projectDisabled}\n            aria-label=\"Default select example\"\n          >\n            <option disabled={true}>Select a Project</option>\n            {projectList.map((option) => {\n              return <option>{option}</option>;\n            })}\n          </Form.Select>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Select the form you would like to update</Form.Label>\n          <Form.Select\n            defaultValue=\"Select a form\"\n            onChange={(event) => {\n              props.setNewDraftFormName(event.target.value);\n            }}\n            aria-label=\"Default select example\"\n          >\n            <option disabled={true}>Select a form</option>\n            {formList.map((option) => {\n              let status = \"\";\n\n              if (option.draft === true) {\n                status = \"draft: \" + option.draftVersion;\n              }\n              if (option.live === true) {\n                status = \"live: \" + option.liveVersion;\n              }\n\n              if ((option.live === true) & (option.draft === true)) {\n                status =\n                  \"draft: \" +\n                  option.draftVersion +\n                  \", live: \" +\n                  option.liveVersion;\n              }\n\n              return (\n                <option value={option.name}>\n                  {option.name + \" (\" + status + \")\"}\n                </option>\n              );\n            })}\n          </Form.Select>\n        </Form.Group>\n\n        {/* <Form.Group>\n                    <Form.Label>\n                        Enter the new form version\n                    </Form.Label>\n                    <Form.Control onChange={(event) => { props.setNewDraftFormVersion(event.target.value) }} />\n\n\n                    <Form.Text>This must match the \"version\" field in your xlsx settings tab, please ensure it is different to the previous version</Form.Text>\n                </Form.Group> */}\n        {/* <div className=\"m-3\">\n                <label className=\"mx-3\">Choose file: </label>\n                <input id=\"input-file\" className=\"d-none\" type=\"file\" />\n                <button onClick={handleUpload} className=\"btn btn-outline-primary\">\n                    Upload\n                </button>\n                </div> */}\n\n        <Form.Group controlId=\"file-select-update-form\">\n          <Form.Label>Select your file</Form.Label>\n\n          <Form.Control\n            type=\"file\"\n            size=\"lg\"\n            onChange={(e) => {\n              props.setSelectedDraftFile(e.target.files[0]);\n            }}\n          />\n        </Form.Group>\n        <Button\n          onClick={async () => {\n            await UpdateForm({\n              authToken: props.authToken,\n              projectName: props.selectedDraftProject,\n              formName: props.newDraftFormName,\n              formVersion: props.newDraftFormVersion,\n              formFile: props.selectedDraftFile,\n            });\n            await props.GetProjectInformation({\n              authToken: props.authToken,\n              setProjectInformation: props.setProjectInformation,\n            });\n          }}\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n}\n\nfunction FinalizeFormEntry(props) {\n  // console.log(\"Draft form data\");\n\n  const [formList, setFormList] = useState([]);\n\n  // console.log(props.data);\n  let projectList = [\"No Projects\"];\n  let projectDisabled = true;\n\n  if ((props.data !== undefined) & (props.data !== null)) {\n    if (props.data.projects !== undefined) {\n      projectList = props.data.projects.map((project) => {\n        return project.name;\n      });\n      projectDisabled = false;\n    }\n\n    if (props.data.projects.length === 0) {\n      projectList = [\"No Projects\"];\n      projectDisabled = true;\n    }\n  }\n  // console.log(projectList);\n\n  // console.log(props.data);\n\n  return (\n    <>\n      <Form>\n        <Form.Group>\n          <Form.Label>Select a project</Form.Label>\n          <Form.Select\n            defaultValue=\"Select a Project\"\n            onChange={(event) => {\n              props.setSelectedDraftProject(event.target.value);\n\n              const newFormList = [];\n              if ((props.data !== undefined) & (props.data !== null)) {\n                if (props.data.forms !== undefined) {\n                  props.data.forms.map((form) => {\n                    if (form.project === event.target.value) {\n                      newFormList.push(form.name);\n                    }\n                  });\n                  setFormList(newFormList);\n                }\n\n                if (props.data.projects.length === 0) {\n                  setFormList([]);\n                }\n              }\n            }}\n            disabled={projectDisabled}\n            aria-label=\"Default select example\"\n          >\n            <option disabled={true}>Select a Project</option>\n            {projectList.map((option) => {\n              return <option>{option}</option>;\n            })}\n          </Form.Select>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label>Select the form you would like to finalize</Form.Label>\n          <Form.Select\n            defaultValue=\"Select a form\"\n            onChange={(event) => {\n              // console.log(\"Form name seleceted\");\n              // console.log(event.target.value);\n              props.setNewDraftFormName(event.target.value);\n            }}\n            aria-label=\"Default select example\"\n          >\n            <option disabled={true}>Select a form</option>\n            {formList.map((option) => {\n              return <option>{option}</option>;\n            })}\n          </Form.Select>\n        </Form.Group>\n\n        <Button\n          onClick={async () => {\n            await FinalizeForm({\n              authToken: props.authToken,\n              project: props.selectedDraftProject,\n              form: props.newDraftFormName,\n            });\n            await props.GetProjectInformation({\n              authToken: props.authToken,\n              setProjectInformation: props.setProjectInformation,\n            });\n          }}\n        >\n          Finalise\n        </Button>\n      </Form>\n    </>\n  );\n}\n\nasync function FinalizeForm(props) {\n  // console.log(\"Finalizing form\");\n  // console.log(props);\n  const result = await axios({\n    method: \"post\",\n    url: process.env.REACT_APP_AUTHENTICATOR_URL + \"api/forms/publish\",\n    headers: {\n      Authorization: props.authToken,\n    },\n    params: {\n      form_name: props.form,\n      project_name: props.project,\n    },\n  });\n}\n\n// Render all of the project information and\n// allow administrator to delete any of the\n// individual projects\nfunction RenderProjectInformation(props) {\n  // console.log(props);\n  if (!props.data) {\n    return (\n      <div>\n        <Table>\n          <thead key=\"table-header\">\n            <tr key=\"table-row-1\">\n              <th key=\"table-head-item-1\">#</th>\n\n              <th key=\"table-head-item-2\">Project Name</th>\n              <th key=\"table-head-item-3\">Description</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td colSpan={3}>No projects found</td>\n            </tr>\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n\n  if (props.data.projects !== undefined) {\n    return (\n      <div>\n        <Table>\n          <thead key=\"table-header\">\n            <tr key=\"table-row-1\">\n              <th key=\"table-head-item-1\">#</th>\n\n              <th key=\"table-head-item-2\">Project Name</th>\n              <th key=\"table-head-item-3\">Description</th>\n            </tr>\n          </thead>\n          <tbody key=\"table-body\">\n            {props.data.projects.map((project, index) => {\n              return (\n                <tr key={\"table-row-\" + index}>\n                  <td key={\"table-row-\" + index + \"-item-1\"}>\n                    <Button\n                      variant=\"danger\"\n                      onClick={async () => {\n                        await DeleteProject(props.authToken, project.name);\n                      }}\n                    >\n                      Delete\n                    </Button>\n                  </td>\n\n                  <td key={\"table-row-\" + index + \"-item-2\"}>{project.name}</td>\n                  <td key={\"table-row-\" + index + \"-item-3\"}>\n                    {project.description}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nasync function AddAdministrator(props) {\n  try {\n    const result = await axios({\n      url: process.env.REACT_APP_AUTHENTICATOR_URL + \"api/admin\",\n      method: \"post\",\n      headers: {\n        Authorization: props.authToken,\n      },\n      data: {\n        email: props.newAdmin,\n      },\n    });\n\n    // console.log(result);\n\n    return result.data;\n  } catch (err) {}\n}\n\nexport default function FormCreationComponent() {\n  const [authToken, setAuthToken] = useContext(AuthContext);\n\n  const [projectInformation, setProjectInformation] = useState(null);\n\n  const [newProjectName, setNewProjectName] = useState(null);\n  const [newProjectDescription, setNewProjectDescription] = useState(null);\n\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [newFormName, setNewFormName] = useState(null);\n  const [newFormVersion, setNewFormVersion] = useState(null);\n\n  const [selectedDraftProject, setSelectedDraftProject] = useState(null);\n  const [selectedDraftFile, setSelectedDraftFile] = useState(null);\n  const [newDraftFormName, setNewDraftFormName] = useState(null);\n  const [newDraftFormVersion, setNewDraftFormVersion] = useState(null);\n\n  const history = useHistory();\n\n  const [newAdmin, setNewAdmin] = useState(null);\n\n  useEffect(() => {\n    async function CheckLoggedIn() {\n      const logged_in = await CheckForLocalToken({\n        setAuthToken: setAuthToken,\n      });\n      if (logged_in == false) {\n        history.push(\"/logout\");\n      }\n    }\n\n    CheckLoggedIn();\n  }, []);\n\n  useEffect(async () => {\n    async function GetUserInfo() {\n      await GetProjectInformation({\n        authToken: authToken,\n        setProjectInformation: setProjectInformation,\n      });\n      // const response = await FetchUserInformation({\n      //     authToken: authToken,\n      //     setUserInfo: setAdminData\n      // })\n    }\n    GetUserInfo();\n  }, [authToken]);\n\n  return (\n    <div id=\"project-management-container\" className=\"sub-page-container\">\n      <Card className=\"main-card border-0\">\n        <Card.Header className=\" bg-dark text-white\">\n          <h3>Creating Forms/Projects</h3>\n        </Card.Header>\n        <Card.Body>\n          <Accordion defaultActiveKey=\"0\">\n            <Accordion.Item eventKey=\"0\">\n              <Accordion.Header>Projects</Accordion.Header>\n              <Accordion.Body>\n                <RenderProjectInformation\n                  GetProjectInformation={GetProjectInformation}\n                  setProjectInformation={setProjectInformation}\n                  data={projectInformation}\n                  authToken={authToken}\n                />\n              </Accordion.Body>\n            </Accordion.Item>\n            <Accordion.Item eventKey=\"1\">\n              <Accordion.Header>Create a Project</Accordion.Header>\n              <Accordion.Body>\n                <CreateProjectForm\n                  GetProjectInformation={GetProjectInformation}\n                  setProjectInformation={setProjectInformation}\n                  newProjectName={newProjectName}\n                  setNewProjectName={setNewProjectName}\n                  newProjectDescription={newProjectDescription}\n                  setNewProjectDescription={setNewProjectDescription}\n                  authToken={authToken}\n                />\n              </Accordion.Body>\n            </Accordion.Item>\n            <Accordion.Item eventKey=\"2\">\n              <Accordion.Header>\n                Create a New Draft Form (Blank)\n              </Accordion.Header>\n              <Accordion.Body>\n                <CreateNewBlankForm\n                  GetProjectInformation={GetProjectInformation}\n                  setProjectInformation={setProjectInformation}\n                  authToken={authToken}\n                  data={projectInformation}\n                  selectedFile={selectedFile}\n                  setSelectedFile={setSelectedFile}\n                  setNewFormName={setNewFormName}\n                  newFormName={newFormName}\n                  setNewFormVersion={setNewFormVersion}\n                  newFormVersion={newFormVersion}\n                  setSelectedProject={setSelectedProject}\n                  selectedProject={selectedProject}\n                />\n              </Accordion.Body>\n            </Accordion.Item>\n\n            <Accordion.Item eventKey=\"3\">\n              <Accordion.Header>Update Draft Form</Accordion.Header>\n              <Accordion.Body>\n                <UpdateDraftForm\n                  GetProjectInformation={GetProjectInformation}\n                  setProjectInformation={setProjectInformation}\n                  authToken={authToken}\n                  data={projectInformation}\n                  selectedDraftFile={selectedDraftFile}\n                  setSelectedDraftFile={setSelectedDraftFile}\n                  setNewDraftFormName={setNewDraftFormName}\n                  newDraftFormName={newDraftFormName}\n                  setNewDraftFormVersion={setNewDraftFormVersion}\n                  newDraftFormVersion={newDraftFormVersion}\n                  setSelectedDraftProject={setSelectedDraftProject}\n                  selectedDraftProject={selectedDraftProject}\n                />\n              </Accordion.Body>\n            </Accordion.Item>\n\n            <Accordion.Item eventKey=\"4\">\n              <Accordion.Header>Finalize a Form</Accordion.Header>\n              <Accordion.Body>\n                <FinalizeFormEntry\n                  GetProjectInformation={GetProjectInformation}\n                  setProjectInformation={setProjectInformation}\n                  authToken={authToken}\n                  data={projectInformation}\n                  setSelectedDraftProject={setSelectedDraftProject}\n                  selectedDraftProject={selectedDraftProject}\n                  setNewDraftFormName={setNewDraftFormName}\n                  newDraftFormName={newDraftFormName}\n                />\n              </Accordion.Body>\n            </Accordion.Item>\n            <Accordion.Item eventKey=\"5\">\n              <Accordion.Header>Add Administrator</Accordion.Header>\n              <Accordion.Body>\n                <Form>\n                  <Row>\n                    <Col md=\"4\">\n                      <Form.Group>\n                        <Form.Label>User Email</Form.Label>\n                        <Form.Control\n                          type=\"email\"\n                          onChange={(event) => {\n                            setNewAdmin(event.target.value);\n                          }}\n                        />\n\n                        <Button\n                          className=\"border-0 bg-dark\"\n                          style={{ marginTop: \"10px\" }}\n                          onClick={async () => {\n                            AddAdministrator({\n                              authToken: authToken,\n                              newAdmin: newAdmin,\n                            });\n                          }}\n                        >\n                          Add User\n                        </Button>\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                </Form>\n              </Accordion.Body>\n            </Accordion.Item>\n          </Accordion>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n","/**/\n\nimport React, { useState, useContext, useEffect } from 'react'\nimport { useHistory } from 'react-router'\n\nimport AuthContext from '../authentication-component/AuthContext';\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction LogoutComponent(props) {\n\n    let [authToken, setAuthToken] = useContext(AuthContext)\n    let history = useHistory()\n    useEffect(() => {\n        setAuthToken(null)\n        localStorage.clear()\n        history.push('/login')\n\n        // Store.addNotification({\n        //     title: \"Logging Out\",\n        //     message: \"You have been logged out of this session\",\n        //     type: \"danger\",\n        //     insert: \"top\",\n        //     container: \"top-right\",\n        //     animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        //     animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        //     dismiss: {\n        //         duration: 3000\n        //     }\n        // });\n\n\n    }, [])\n\n    return (\n        <>\n        </>\n    )\n}\n\nexport {\n    LogoutComponent,\n}","import React, { useState, useContext, useEffect } from \"react\";\nimport { Card, Button, Spinner } from \"react-bootstrap\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nimport AuthContext from \"../authentication-component/AuthContext\";\nimport UserContext from \"../user-info-component/UserContext\";\n\nimport {\n  GetInformationForFormComponent,\n  Set,\n  CheckForLocalToken,\n} from \"../fetching-context-info/fetching-context-info\";\n\nimport { FetchUserInformation } from \"../fetching-context-info/fetching-context-info\";\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\n\nimport QRCode from \"react-qr-code\";\nimport { deflateSync } from \"zlib\";\n\nimport axios from \"axios\";\n\nimport MainCard from \"../main-card-component/main-card-component\";\n\nasync function ProcessData(props) {\n  // console.log(props);\n  const form = props.data.forms.filter(\n    (item) =>\n      item.name === props.formSelected && item.project === props.projectSelected\n  )[0];\n  const result = await axios({\n    method: \"post\",\n    url: process.env.REACT_APP_API_URL + \"api/process-data\",\n    headers: {\n      Authorization: props.authToken,\n    },\n    data: {\n      commandType: props.commandType,\n      projectName: props.projectSelected,\n      formName: props.formSelected,\n      formVersion: form.formVersion,\n      draft: props.draft,\n    },\n  });\n  return result;\n}\n\nfunction SetInitialFormState(props) {\n  // Check if the form code in the URL is correct\n  function CheckFormCode(props) {\n    if (!props.data) {\n      return false;\n    }\n    if (!props.data.forms) {\n      return false;\n    }\n    let form = props.data.forms.filter(\n      (item) =>\n        (item.name === props.formSelected) &\n        (item.project === props.projectSelected)\n    );\n    if (form.length === 1) {\n      return true;\n    }\n    return false;\n  }\n\n  // Check if the user is a project manager\n  function CheckProjectManager(props) {\n    if (!props.data) {\n      return false;\n    }\n    if (!props.data.user) {\n      return false;\n    }\n\n    if (!props.data.user.roles) {\n      return false;\n    }\n\n    if (!props.data.user.roles.projectManager) {\n      return false;\n    }\n\n    if (props.data.user.roles.projectManager.includes(props.projectSelected)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Check if the ODK configuration details are included\n  function CheckODKConf(props) {\n    if (!props.data) {\n      return false;\n    }\n\n    if (!props.data.forms) {\n      return false;\n    }\n    let form = props.data.forms.filter(\n      (item) =>\n        item.name === props.formSelected &&\n        item.project === props.projectSelected\n    );\n    if (form.length !== 1) {\n      return false;\n    }\n\n    if ((form[0].draft === true) & (props.draftOrLive === \"draft\")) {\n      return form[0].draftCollectionDetails;\n    }\n    if ((form[0].live === true) & (props.draftOrLive === \"live\")) {\n      return form[0].collectionDetails;\n    }\n\n    return false;\n  }\n\n  // Check if the encoded ODK settings exist\n  function CheckEncodedSettings(props) {\n    if (!props.data) {\n      return false;\n    }\n\n    if (!props.data.forms) {\n      return false;\n    }\n    let form = props.data.forms.filter(\n      (item) =>\n        item.name === props.formSelected &&\n        item.project === props.projectSelected\n    );\n\n    if (form.length !== 1) {\n      return false;\n    }\n\n    if (props.draftOrLive === \"draft\") {\n      let odkConf = form[0].draftCollectionDetails;\n      return deflateSync(JSON.stringify(odkConf)).toString(\"base64\");\n    }\n    if (props.draftOrLive === \"live\") {\n      let odkConf = form[0].collectionDetails;\n      return deflateSync(JSON.stringify(odkConf)).toString(\"base64\");\n    }\n\n    return false;\n  }\n\n  // Check if a code for the form should be rendered\n\n  const renderODKFormCode = CheckFormCode({\n    data: props.data,\n    formSelected: props.formSelected,\n    projectSelected: props.projectSelected,\n    draftOrLive: props.draftOrLive,\n  });\n\n  const projectManagerOfForm = CheckProjectManager({\n    data: props.data,\n    projectSelected: props.projectSelected,\n  });\n\n  const odkConf = CheckODKConf({\n    data: props.data,\n    projectSelected: props.projectSelected,\n    formSelected: props.formSelected,\n    draftOrLive: props.draftOrLive,\n  });\n\n  const encoded_settings = CheckEncodedSettings({\n    data: props.data,\n    projectSelected: props.projectSelected,\n    formSelected: props.formSelected,\n    draftOrLive: props.draftOrLive,\n  });\n  // console.log(\"odkConf\");\n\n  // console.log(odkConf);\n\n  let draft = false;\n  let live = false;\n  if (props.draftOrLive == \"draft\") {\n    draft = true;\n  }\n  if (props.draftOrLive == \"live\") {\n    live = true;\n  }\n\n  // Need to add data collecter as an option\n  const stateToReturn = {\n    renderODKFormCode: renderODKFormCode,\n    projectManagerOfForm: projectManagerOfForm,\n    odkConf: odkConf,\n    encoded_settings: encoded_settings,\n    draft: draft,\n    live: live,\n  };\n  return stateToReturn;\n}\n\nfunction CardBody(props) {\n  // console.log(\"Card body props\");\n  // console.log(props);\n\n  const [formEditURL, setFormEditURL] = useState(\"\");\n\n  useEffect(() => {\n    setFormEditURL(\"/xlsform/\" + props.formSelected + \"/edit\");\n  }, []);\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <p>\n        <a href=\"https://docs.getodk.org/collect-install/\" target=\"_blank\">\n          1. Install ODK\n        </a>\n      </p>\n      <p>2. Open the ODK app</p>\n      <p>3. Scan this QR code</p>\n      {props.formState.encoded_settings ? (\n        <QRCode value={props.formState.encoded_settings} />\n      ) : (\n        <Spinner\n          as=\"span\"\n          animation=\"border\"\n          size=\"100px\"\n          role=\"status\"\n          aria-hidden=\"true\"\n        />\n      )}\n\n      {props.formState.draft ? (\n        <div style={{ marginTop: \"20px\" }}>\n          {/* <Button className=\"bg-dark border-0\" style={{ \"margin\": \"10px\" }}\n                        onClick={async () => {\n                            await ProcessData({\n                                commandType: \"generate\",\n                                draft: props.formState.draft,\n                                authToken: props.authToken,\n                                data: props.data,\n                                formSelected: props.formSelected,\n                                projectSelected: props.projectSelected\n                            })\n                            // console.log(\"Finished Generating Data\")\n                        }}\n\n                    >Generate Mock Submissions</Button> */}\n          *Your form is currently saved as a draft. Draft submissions you make\n          will be removed once the form is finalised.*\n        </div>\n      ) : (\n        <></>\n      )}\n\n      <div style={{ marginTop: \"20px\" }}>\n        <form\n          method=\"post\"\n          action={process.env.REACT_APP_SURVEY_BUILDER_URL}\n          className=\"inline\"\n        >\n          <input type=\"hidden\" name=\"token\" value={props.authToken} />\n          <input type=\"hidden\" name=\"redirect_url\" value={formEditURL} />\n          <Button\n            variant=\"dark\"\n            style={{ verticalAlign: \"center\" }}\n            type=\"submit\"\n            value=\"submit\"\n          >\n            {props.formState.draft ? \"Edit Draft\" : \"Create New Draft\"}\n          </Button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default function DataCollectionComponent() {\n  const projectSelected = useParams().projectName;\n  const formSelected = useParams().formName;\n  const draftOrLive = useParams().draftOrLive;\n\n  const [renderInstallCode, setRenderInstallCode] = useState(false);\n  const [renderODKFormCode, setRenderODKFormCode] = useState(true);\n\n  const [authToken, setAuthToken] = useContext(AuthContext);\n  const [adminData, setAdminData] = useContext(UserContext);\n\n  const history = useHistory();\n\n  const [initialState, setInitialState] = useState({\n    renderODKFormCode: false,\n    projectManagerOfForm: false,\n    dataAnalystOfForm: false,\n    odkConf: false,\n    encoded_settings: false,\n    draft: false,\n    live: false,\n    data: {\n      forms: [],\n      users: [],\n      projects: [],\n    },\n  });\n\n  useEffect(() => {\n    async function CheckLoggedIn() {\n      const logged_in = await CheckForLocalToken({\n        setAuthToken: setAuthToken,\n      });\n      if (logged_in == false) {\n        history.push(\"/logout\");\n      }\n    }\n\n    CheckLoggedIn();\n  }, []);\n\n  useEffect(async () => {\n    async function FetchUserInfo() {\n      await FetchUserInformation({\n        authToken: authToken,\n        setUserInfo: setAdminData,\n      });\n    }\n\n    FetchUserInfo();\n  }, [authToken]);\n\n  useEffect(() => {\n    const new_form_state = SetInitialFormState({\n      data: adminData,\n      formSelected: formSelected,\n      projectSelected: projectSelected,\n      draftOrLive: draftOrLive,\n    });\n\n    // console.log(\"Setting initial state\");\n    // console.log(new_form_state);\n    // console.log(adminData);\n\n    setInitialState(new_form_state);\n  }, [adminData]);\n\n  return (\n    <MainCard\n      CardTitle=\"Collect Data\"\n      filters={[projectSelected, formSelected]}\n      history={history}\n      back_link={\"/projects/\" + projectSelected}\n      doc_extension=\"source/user-guide/navigating-the-app.html#data-collection\"\n      CardBody={CardBody({\n        formState: initialState,\n        data: adminData,\n        authToken: authToken,\n        formSelected: formSelected,\n        projectSelected: projectSelected,\n      })}\n    ></MainCard>\n  );\n}\n","import React, { useState, useContext, useEffect } from \"react\";\nimport {\n  Card,\n  Button,\n  Nav,\n  Accordion,\n  Table,\n  Spinner,\n  Form,\n  InputGroup,\n  FormControl,\n} from \"react-bootstrap\";\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\nimport { TiTickOutline } from \"react-icons/ti\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nimport AuthContext from \"../authentication-component/AuthContext\";\nimport UserContext from \"../user-info-component/UserContext\";\n\nimport {\n  FetchUserInformation,\n  CheckForLocalToken,\n} from \"../fetching-context-info/fetching-context-info\";\n\nimport { GetInformationForFormComponent } from \"../fetching-context-info/fetching-context-info\";\n\nimport axios from \"axios\";\n\nimport { Store } from \"react-notifications-component\";\nimport { style } from \"@mui/system\";\n\nimport MainCard from \"../main-card-component/main-card-component\";\n\nimport \"./data-access-component.css\";\n\n// ***************** MAIN RENDER COMPONENT **************** //\nfunction RenderDataCard(props) {\n  return (\n    <>\n      {props.showRawData ? <RenderRawDataCard {...props} /> : <></>}\n\n      {props.showUnits ? <RenderUnitsForm {...props} /> : <></>}\n      {props.showPrices ? (\n        <RenderPriceAndCalorieConversions {...props} />\n      ) : (\n        <></>\n      )}\n      {props.showOutputs ? <RenderFinalOutputs {...props} /> : <></>}\n    </>\n  );\n}\n\n// **************** Render sub-components **************** //\nfunction RenderRawDataCard(props) {\n  var [rawData, setRawData] = useState();\n  var [dataDownload, setDataDownloadLink] = useState();\n\n  let background_color = \"#4B5320\";\n  let text_color = \"white\";\n  let show_tick = true;\n\n  useEffect(() => {\n    // console.log(\"Raw data props\");\n\n    // console.log(props);\n    async function FetchRawData() {\n      const NewRawUnitsData = await FetchData({\n        authToken: props.authToken,\n        dataType: \"rawData\",\n        projectID: props.projectSelected,\n        formID: props.formSelected,\n        unit: false,\n        data: true,\n      });\n\n      setRawData(NewRawUnitsData);\n    }\n\n    FetchRawData();\n  }, []);\n\n  useEffect(() => {\n    if (rawData) {\n      // console.log(rawData);\n      const raw_data_download_link = generateDataDownloadLink(\n        rawData,\n        dataDownload\n      );\n      setDataDownloadLink(raw_data_download_link);\n    }\n  }, [rawData]);\n\n  return (\n    <Card style={{ marginTop: \"30px\", width: \"100%\" }}>\n      <Card.Header\n        style={{ backgroundColor: background_color, color: text_color }}\n      >\n        Raw Survey Responses\n      </Card.Header>\n      <Card.Body>\n        Download the raw data from your survey. If you have collected more\n        responses since last time you visited, click refresh to fetch new\n        responses. You can also recalculate indicators for all of these\n        responses, by going through each of the steps below\n        <div style={{ display: \"inline-grid\", width: \"100%\" }}>\n          <div style={{ marginLeft: \"auto\", marginRight: 0 }}>\n            <>\n              <Button\n                style={{ margin: \"2px\" }}\n                className=\"bg-dark border-0\"\n                onClick={async () => {\n                  props.setLoading(true);\n                  await ProcessData({\n                    commandType: \"raw-data\",\n                    formSelected: props.formSelected,\n                    projectSelected: props.projectSelected,\n                    process_label: \"Raw Data and Unit Extraction\",\n                    data: props.userInfo,\n                    authToken: props.authToken,\n                  });\n\n                  await GetInformationForFormComponent({\n                    setAuthToken: props.setAuthToken,\n                    authToken: props.authToken,\n                    setUserInfo: props.setUserInfo,\n                    projectName: props.projectSelected,\n                    formName: props.formSelected,\n                    setFormData: props.setFormData,\n                    setShowRawData: props.setShowRawData,\n                    setUserInfo: props.setUserInfo,\n                  });\n                  props.setLoading(false);\n                }}\n              >\n                Refresh\n              </Button>\n              <a\n                // Name of the file to download\n                download={\n                  props.projectSelected +\n                  \"_\" +\n                  props.formSelected +\n                  \"_\" +\n                  \"raw_data.csv\"\n                }\n                // link to the download URL\n                href={dataDownload}\n              >\n                <Button style={{ margin: \"2px\" }} className=\"bg-dark border-0\">\n                  Download\n                </Button>\n              </a>\n\n              <Button\n                style={{ margin: \"2px\" }}\n                className=\"bg-dark border-0\"\n                onClick={async () => {\n                  props.setLoading(true);\n                  await ProcessData({\n                    commandType: \"units\",\n                    formSelected: props.formSelected,\n                    projectSelected: props.projectSelected,\n                    process_label: \"Extracting Units\",\n                    data: props.userInfo,\n                    authToken: props.authToken,\n                  });\n\n                  await GetInformationForFormComponent({\n                    setAuthToken: props.setAuthToken,\n                    authToken: props.authToken,\n                    setUserInfo: props.setUserInfo,\n                    projectName: props.projectSelected,\n                    formName: props.formSelected,\n                    setFormData: props.setFormData,\n                    setShowRawData: props.setShowRawData,\n                    setUserInfo: props.setUserInfo,\n                  });\n                  props.setLoading(false);\n                }}\n              >\n                Extract Units\n              </Button>\n            </>\n          </div>\n          <div style={{ marginLeft: \"auto\", marginRight: 0 }}>\n            Last Updated: {props.formData.time_updated.rawDataExtracted}\n          </div>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n}\n\nfunction RenderUnitsForm(props) {\n  let background_color = \"\";\n  let text_color = \"black\";\n  let show_tick = false;\n  if (props.showPrices === true) {\n    background_color = \"#4B5320\";\n    text_color = \"white\";\n    show_tick = true;\n  }\n\n  return (\n    <Card style={{ marginTop: \"30px\", width: \"100%\" }}>\n      <Card.Header\n        style={{ backgroundColor: background_color, color: text_color }}\n      >\n        {show_tick ? (\n          <>\n            <TiTickOutline /> Units and Data Cleaning (Completed)\n          </>\n        ) : (\n          \"Units and Data Cleaning\"\n        )}\n      </Card.Header>\n      <Card.Body>\n        Here you can provide conversion factors for any values which were\n        recorded in the survey The units you enter here will be used to\n        calculate key indicators, such as crop yield, amounts of livestock\n        products produced, and amounts of inputs used. You can also correct any\n        mispelt livestock or crop names\n        <br />\n        <br />\n        Go through each table individually and convert units where you can. When\n        you have converted all the units in one table click \"Submit\". When you\n        have converted all of the units tick the confirmation box below and you\n        will proceed to the next step in the calculations.\n        <br />\n        <br />\n        For more information on converting units, click{\" \"}\n        <a\n          href={process.env.REACT_APP_DOCS + props.doc_extension}\n          target=\"_blank\"\n        >\n          here\n        </a>\n        <br />\n        <br />\n        <ShowUnitsForm\n          {...props}\n          formType=\"units\"\n          formLabel=\"Select the type of unit\"\n          checkBoxLabel=\"I confirm that I have verified and submitted all units, proceed to (re)calculate product prices\"\n          submissionLabel=\"Calculate Prices\"\n          commandType=\"prices\"\n          processLabel=\"Price Calculations\"\n          updatedTime={props.formData.time_updated.unitsExtracted}\n        />\n      </Card.Body>\n    </Card>\n  );\n}\n\nfunction RenderPriceAndCalorieConversions(props) {\n  let background_color = \"\";\n  let text_color = \"black\";\n  let show_tick = false;\n  if (props.showOutputs === true) {\n    background_color = \"#4B5320\";\n    text_color = \"white\";\n    show_tick = true;\n  }\n\n  return (\n    <Card style={{ marginTop: \"30px\", width: \"100%\" }}>\n      <Card.Header\n        style={{ backgroundColor: background_color, color: text_color }}\n      >\n        {show_tick ? (\n          <>\n            <TiTickOutline /> Prices and Calorie Conversion Verification\n            (Completed){\" \"}\n          </>\n        ) : (\n          \"Prices and Calorie Conversion Verification\"\n        )}\n      </Card.Header>\n      <Card.Body>\n        In the previous step you tidied crop and livestock names. You also\n        provided numeric conversion factors for units. These were used these to\n        identify which crops and livestock to calculate indicators for.\n        <br />\n        <br />\n        We have estimated prices and calorie conversions for crops and livestock\n        in this survey. Here you can verify them, these estimates will be used\n        when calculating final indicators.\n        <br />\n        <br />\n        Again, go through each table individually and convert units where you\n        can. When you have converted all values in one table click \"Submit\".\n        When you have converted all of tables, tick the confirmation box below\n        and you will proceed to calculate final indicators.\n        <br />\n        <br />\n        For more information on converting prices and calories, click{\" \"}\n        <a\n          href={process.env.REACT_APP_DOCS + props.doc_extension}\n          target=\"_blank\"\n        >\n          here\n        </a>\n        <br />\n        <br />\n        <ShowUnitsForm\n          {...props}\n          formType=\"prices\"\n          formLabel=\"Select the price/calorie conversion\"\n          checkBoxLabel=\"I confirm that I have verified and submitted all price and calorie conversions, proceed to (re)calculate RHoMIS indicators\"\n          submissionLabel=\"Calculate Indicators\"\n          commandType=\"indicators\"\n          processLabel=\"Indicator Calculations\"\n          updatedTime={props.formData.time_updated.pricesCalculated}\n        />\n      </Card.Body>\n    </Card>\n  );\n}\n\nfunction RenderFinalOutputs(props) {\n  const [rhomisDataSelect, setRHoMISSelect] = useState(null);\n  const [rhomisData, setRHoMISData] = useState(null);\n  const [dataDownloadLink, setDataDownloadLink] = useState(\"\");\n  const [buttonLoading, setButtonLoading] = useState(true);\n  let background_color = \"#4B5320\";\n  let text_color = \"white\";\n\n  useEffect(() => {\n    async function RetrieveZipData() {\n      await RetrieveZipFile({\n        projectID: props.projectSelected,\n        formID: props.formSelected,\n        setButtonLoading: setButtonLoading,\n        authToken: props.authToken,\n        dataDownloadLink: dataDownloadLink,\n        setDataDownloadLink: setDataDownloadLink,\n      });\n\n      setButtonLoading(false);\n    }\n\n    RetrieveZipData();\n  }, []);\n\n  return (\n    <Card style={{ marginTop: \"30px\", width: \"100%\" }}>\n      <Card.Header\n        style={{ backgroundColor: background_color, color: text_color }}\n      >\n        Final Outputs\n      </Card.Header>\n\n      <Card.Body>\n        You can now access all results for this survey by clicking the button\n        below.\n        <br />\n        <br />\n        The results in this bulk download include:\n        <ul>\n          <li>\n            <strong>Documentation</strong>\n          </li>\n          <li>\n            <strong>The most recent survey draft</strong>\n          </li>\n          <li>\n            <strong>Indicator Data</strong>\n          </li>\n          <li>\n            <strong>Processed Data</strong>\n          </li>\n          <li>\n            <strong>Reformatted Outputs</strong>\n          </li>\n        </ul>\n        <br />\n        More details about the outputs will be included in the bulk-download\n        folder, in a <strong>README.txt </strong>\n        file.\n        <div style={{ display: \"inline-grid\", width: \"100%\" }}>\n          <div style={{ marginLeft: \"auto\", marginRight: 0 }}>\n            {/* {!buttonLoading?<Button onClick={async ()=>{\n          RetrieveZipFile({\n            projectID:props.projectSelected,\n            formID:props.formSelected,\n            setButtonLoading:setButtonLoading,\n            authToken:props.authToken,\n            dataDownloadLink: dataDownloadLink,\n            setDataDownloadLink: setDataDownloadLink\n          })\n        }}>Download Data</Button>:\n        <Button disabled={true}><Spinner/></Button>} */}\n\n            {buttonLoading ? (\n              <Spinner></Spinner>\n            ) : (\n              <a\n                // Name of the file to download\n                download={\n                  props.projectSelected + \"_\" + props.formSelected + \".zip\"\n                }\n                // link to the download URL\n                href={dataDownloadLink}\n              >\n                <Button style={{ margin: \"2px\" }} className=\"bg-dark border-0\">\n                  Download Results\n                </Button>\n              </a>\n            )}\n          </div>\n          <div style={{ marginLeft: \"auto\", marginRight: 0 }}>\n            Last Updated: {props.formData.time_updated.finalIndicators}\n          </div>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n}\n\nfunction RenderConversionTable(props) {\n  // whenever the\n\n  return (\n    <div className=\"table-div\">\n      <Table className=\"units-table\">\n        <thead>\n          <tr key=\"row_1\">\n            <th>Survey Value</th>\n            <th>Conversion</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.unitsData.map((unit) => {\n            return (\n              <tr\n                key={\"unit-row-\" + unit.survey_value + unit.id_rhomis_dataset}\n              >\n                <td\n                  style={{ verticalAlign: \"middle\" }}\n                  key={\n                    \"unit-row-\" +\n                    unit.survey_value +\n                    \"-survey-value-\" +\n                    unit.id_rhomis_dataset\n                  }\n                >\n                  {unit.survey_value}\n                </td>\n\n                <td\n                  style={{ verticalAlign: \"middle\" }}\n                  key={\n                    \"unit-row-\" +\n                    unit.survey_value +\n                    \"-conversion-\" +\n                    unit.id_rhomis_dataset\n                  }\n                >\n                  <form>\n                    <input\n                      className=\"form-control\"\n                      type=\"text\"\n                      defaultValue={unit.conversion}\n                      onChange={(event) => {\n                        UpdateUnitsData({\n                          ...props,\n                          update: event.target.value,\n                          unit: unit,\n                        });\n                      }}\n                    />\n                  </form>{\" \"}\n                </td>\n                {/* <td key={\"unit-row-\"+unit.survey_value+\"-survey-value\"}>{unit.conversion}</td> */}\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </div>\n  );\n}\n\nfunction RenderSpinner() {\n  return (\n    <>\n      <Spinner\n        as=\"span\"\n        animation=\"border\"\n        style={{ marginTop: \"4em\", width: \"4rem\", height: \"4rem\" }}\n        role=\"status\"\n        aria-hidden=\"true\"\n      />\n    </>\n  );\n}\n\n// *********** METHODS ************** //\n\nasync function FetchData(props) {\n  // Basic post request, fetching information by:\n  //dataType: type of data we are looking for (e.g. indicator data),\n\n  const response = await axios({\n    method: \"post\",\n    url: process.env.REACT_APP_API_URL + \"api/data\",\n    data: {\n      dataType: props.dataType,\n      projectID: props.projectID,\n      formID: props.formID,\n      unit: props.unit,\n      data: props.data,\n    },\n    headers: {\n      Authorization: props.authToken,\n    },\n  });\n\n  // If the response is null return null\n  // Otherwise return the dataset.\n  var data = response.data;\n  if (data === null) {\n    return null;\n  } else {\n    return data;\n  }\n}\n\nfunction UpdateUnitsData(props) {\n  console.log(\"UPDATE UNIT DATA\");\n  console.log(props);\n\n  let changing_units = props.unitsData;\n\n  let index = changing_units.findIndex((elem) => {\n    if (\n      elem.unit_type === props.unit.unit_type &&\n      elem.survey_value === props.unit.survey_value &&\n      elem.id_rhomis_dataset === props.unit.id_rhomis_dataset\n    ) {\n      return true;\n    }\n  });\n  // console.log(index);\n\n  changing_units[index].conversion = props.update;\n\n  console.log(changing_units);\n  props.setUnitsData(changing_units);\n}\n\nasync function SubmitUnitsData(props) {\n  // console.log(props.unitsData);\n\n  try {\n    const result = await axios({\n      method: \"post\",\n      url: process.env.REACT_APP_API_URL + \"api/conversions\",\n      headers: {\n        Authorization: props.authToken,\n      },\n      data: {\n        projectSelected: props.projectSelected,\n        formSelected: props.formSelected,\n        unitType: props.unitsSelect,\n        unitsData: props.unitsData,\n      },\n    });\n\n    if (result.status === 200) {\n      Store.addNotification({\n        title: \"Success\",\n        message: props.process_label + \" Completed\",\n        type: \"success\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 2000,\n        },\n      });\n    }\n    return result;\n  } catch (err) {\n    // console.log(err.response);\n    Store.addNotification({\n      title: \"Error\",\n      message: err.response.data,\n      type: \"danger\",\n      insert: \"top\",\n      container: \"top-right\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 2000,\n      },\n    });\n  }\n}\n\nfunction ShowUnitsForm(props) {\n  const [unitsSelect, setUnitsSelect] = useState(null);\n  const [unitsDownloadLink, setUnitsDownloadLink] = useState();\n  const [unitsData, setUnitsData] = useState([\n    {\n      survey_value: \"\",\n      conversion: \"\",\n    },\n  ]);\n\n  const [submitAllUnits, setSubmitAllUnits] = useState(false);\n  // console.log(props);\n\n  const pricesNames = [\n    \"mean_crop_price_lcu_per_kg\",\n    \"mean_livestock_price_per_animal\",\n    \"mean_meat_price_per_kg\",\n    \"mean_milk_price_per_litre\",\n    \"mean_eggs_price_per_kg\",\n    \"mean_bees_honey_price_per_kg\",\n    \"crop_calories\",\n    \"milk_calories\",\n    \"eggs_calories\",\n    \"honey_calories\",\n    \"meat_calories\",\n    \"staple_crop\",\n    \"livestock_weight_kg\",\n    \"livestock_count_to_tlu\",\n  ];\n  useEffect(() => {\n    // console.log(\"Units\");\n    // console.log(unitsData);\n  }, [unitsData]);\n\n  return (\n    <>\n      <Form>\n        <Form.Label>{props.formLabel}</Form.Label>\n\n        <Form.Select\n          defaultValue=\"Select\"\n          onChange={async (event) => {\n            // autosave progress\n            await SubmitUnitsData({\n              ...props,\n              unitsData: unitsData,\n              unitsSelect: unitsSelect,\n              process_label: \"Conversion Submission\",\n            });\n\n            setUnitsSelect(event.target.value);\n            const newUnitsData = await FetchData({\n              authToken: props.authToken,\n              dataType: event.target.value,\n              projectID: props.projectSelected,\n              formID: props.formSelected,\n              unit: true,\n              data: false,\n            });\n            const units_download_link = generateDataDownloadLink(\n              newUnitsData,\n              unitsDownloadLink\n            );\n            setUnitsDownloadLink(units_download_link);\n\n            setUnitsData(newUnitsData);\n          }}\n        >\n          <option key=\"default-select\" disabled={true}>\n            Select\n          </option>\n          {props.formData.units.map((unitType) => {\n            if (props.formType === \"units\") {\n              if (\n                pricesNames.some((priceName) => priceName == unitType) === false\n              ) {\n                return (\n                  <option key={\"unit-option-\" + unitType}>{unitType}</option>\n                );\n              }\n            }\n            if (props.formType === \"prices\") {\n              if (\n                pricesNames.some((priceName) => priceName == unitType) === true\n              ) {\n                return (\n                  <option key={\"unit-option-\" + unitType}>{unitType}</option>\n                );\n              }\n            }\n            // return <option key={\"unit-option-\" + unitType}>{unitType}</option>;\n          })}\n        </Form.Select>\n      </Form>\n      <br />\n      {unitsSelect ? (\n        <RenderConversionTable\n          unitsData={unitsData}\n          setUnitsData={setUnitsData}\n        />\n      ) : (\n        <></>\n      )}\n\n      <br />\n      <Form>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n          <Form.Check\n            type=\"checkbox\"\n            label={props.checkBoxLabel}\n            onChange={() => {\n              let currentState = submitAllUnits;\n\n              setSubmitAllUnits(!currentState);\n            }}\n          />\n        </Form.Group>\n      </Form>\n      <div style={{ display: \"inline-grid\", width: \"100%\" }}>\n        <div style={{ marginLeft: \"auto\", marginRight: 0 }}>\n          {!submitAllUnits ? (\n            <>\n              <a\n                // Name of the file to download\n                download={\n                  props.projectSelected +\n                  \"_\" +\n                  props.formSelected +\n                  \"_\" +\n                  unitsSelect +\n                  \".csv\"\n                }\n                // link to the download URL\n                href={unitsDownloadLink}\n              >\n                <Button style={{ margin: \"2px\" }} className=\"bg-dark border-0\">\n                  Download\n                </Button>\n              </a>\n\n              <Button\n                className=\"bg-dark border-0\"\n                onClick={async () => {\n                  await SubmitUnitsData({\n                    ...props,\n                    unitsData: unitsData,\n                    unitsSelect: unitsSelect,\n                    process_label: \"Conversion Submission\",\n                  });\n                }}\n              >\n                Submit\n              </Button>\n            </>\n          ) : (\n            <>\n              <Button\n                className=\"bg-dark border-0\"\n                onClick={async () => {\n                  props.setLoading(true);\n                  await ProcessData({\n                    commandType: props.commandType,\n                    formSelected: props.formSelected,\n                    projectSelected: props.projectSelected,\n                    process_label: props.processLabel,\n                    data: props.userInfo,\n                    authToken: props.authToken,\n                  });\n\n                  await GetInformationForFormComponent({\n                    setAuthToken: props.setAuthToken,\n                    authToken: props.authToken,\n                    setUserInfo: props.setUserInfo,\n                    projectName: props.projectSelected,\n                    formName: props.formSelected,\n                    setFormData: props.setFormData,\n                    setShowRawData: props.setShowRawData,\n                    setUserInfo: props.setUserInfo,\n                  });\n                  props.setLoading(false);\n                }}\n              >\n                {props.submissionLabel}\n              </Button>\n            </>\n          )}\n        </div>\n        <div style={{ marginLeft: \"auto\", marginRight: 0 }}>\n          Last Updated: {props.updatedTime}\n        </div>\n      </div>\n    </>\n  );\n}\n\nasync function ProcessData(props) {\n  // console.log(props);\n  const form = props.data.forms.filter(\n    (item) =>\n      item.name === props.formSelected && item.project === props.projectSelected\n  )[0];\n\n  Store.addNotification({\n    id: \"notification-start\",\n    title: props.process_label + \" Started\",\n    message: \"Please wait\",\n    type: \"default\",\n    insert: \"top\",\n    container: \"top-right\",\n    animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n    animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n  });\n\n  try {\n    const result = await axios({\n      method: \"post\",\n      url: process.env.REACT_APP_API_URL + \"api/process-data\",\n      headers: {\n        Authorization: props.authToken,\n      },\n      data: {\n        commandType: props.commandType,\n        projectName: props.projectSelected,\n        formName: props.formSelected,\n        formVersion: form.liveVersion,\n        draft: form.draft,\n      },\n    });\n\n    if (result.status === 200) {\n      Store.addNotification({\n        title: \"Success\",\n        message: props.process_label + \" Completed\",\n        type: \"default\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 2000,\n        },\n      });\n\n      Store.removeNotification(\"notification-start\");\n    }\n    return true;\n  } catch (err) {\n    // console.log(err.response);\n    Store.addNotification({\n      title: \"Error\",\n      message: err.response.data,\n      type: \"danger\",\n      insert: \"top\",\n      container: \"top-right\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n    });\n    return false;\n  }\n}\n\nasync function RetrieveZipFile(props) {\n  // console.log(props);\n  // console.log(process.env.REACT_APP_API_URL + \"api/data/all-data\");\n\n  const response = await axios({\n    method: \"post\",\n    responseType: \"arraybuffer\",\n    url: process.env.REACT_APP_API_URL + \"api/data/all-data\",\n    data: {\n      projectID: props.projectID,\n      formID: props.formID,\n    },\n    headers: {\n      Authorization: props.authToken,\n    },\n  });\n  // console.log(response.data);\n\n  props.setDataDownloadLink(\n    generateZipDownloadLink(response.data, props.dataDownloadLink)\n  );\n  return;\n}\nfunction generateZipDownloadLink(ZipResponse, dataDownloadLink) {\n  // Generating the csv string from the data we\n  // hope to download (comes in JSON format)\n  // Create a file-like immutable objesct\n  const data = new Blob([ZipResponse], { type: \"application/zip\" });\n\n  // Clears the previous URL used to download the data\n  if (dataDownloadLink !== \"\") {\n    window.URL.revokeObjectURL(dataDownloadLink);\n  }\n\n  // update the download link state\n  return window.URL.createObjectURL(data);\n}\n\nfunction generateCSV(data) {\n  //Return nothing if the data is null\n  if (data === null) {\n    return;\n  }\n\n  if (data.length === undefined) {\n    return;\n  }\n\n  // Creating an empty list to include all of the lines of the csv\n  var csv_lines = [];\n\n  // This is the full RHoMIS Data set\n  var full_data_set = data;\n\n  // Identifying the column headers\n  // Some households have more columns than other. This merges column\n  // names in order based on the rows of each household\n  var column_names = [];\n\n  // Looping through households\n  for (\n    let household_index = 0;\n    household_index < full_data_set.length;\n    household_index++\n  ) {\n    // All of the column names for this individual household\n    var household_column_names = Object.keys(full_data_set[household_index]);\n    //Looping through individual column names for the individual household\n    for (\n      let column_index = 0;\n      column_index < household_column_names.length;\n      column_index++\n    ) {\n      // The new column name for that household\n      var new_column = household_column_names[column_index];\n      // Checking whether the new column has previously been encountered\n      if (!column_names.some((column) => column === new_column)) {\n        // If this is the first househould, adds the new element at the column index\n        // not deleting any items\n        if (household_index === 0) {\n          column_names.splice(column_index, 0, new_column);\n        }\n        // Checks if this is a household after the first household\n        if (household_index > 0) {\n          // Check if the previous column was in the column index\n          if (!household_column_names[column_index - 1] !== undefined) {\n            // Looks at the column before, if it was encountered previously\n            // we make sure this new column is added in the correct place\n            var index_of_previous_column_name = column_names.indexOf(\n              household_column_names[column_index - 1]\n            );\n\n            column_names.splice(\n              index_of_previous_column_name + 1,\n              0,\n              new_column\n            );\n          } else {\n            // If the previous column did not exist previously, we make sure to add the new column\n            // at the end.\n            column_names.splice(column_index + 1, 0, new_column);\n          }\n        }\n      }\n    }\n  }\n  // add all of the column names, seperated by a column and a space\n  csv_lines.push(column_names.join(\", \"));\n\n  // Now push each individual household to the csv\n  var household_data = full_data_set.map((household) => {\n    var household_array = column_names.map((column) => {\n      if (household[column] !== null) {\n        return household[column];\n      } else {\n        return \"\";\n      }\n    });\n    // Join the column values by comma\n    var household_row = household_array.join(\", \");\n    return household_row;\n  });\n  csv_lines = csv_lines.concat(household_data);\n\n  // Join each line and seperate by \\n\n  var csv_string = csv_lines.join(\"\\n\");\n  return csv_string;\n}\n\nfunction generateDataDownloadLink(dataToDownload, dataDownloadLink) {\n  // Generating the csv string from the data we\n  // hope to download (comes in JSON format)\n  const dataCSV = generateCSV(dataToDownload);\n  // Create a file-like immutable objesct\n  const data = new Blob([dataCSV], { type: \"text/plain\" });\n\n  // Clears the previous URL used to download the data\n  if (dataDownloadLink !== \"\") {\n    window.URL.revokeObjectURL(dataDownloadLink);\n  }\n  // update the download link state\n  return window.URL.createObjectURL(data);\n}\n\nasync function CheckFormData(props) {\n  // console.log(\"Checking form data\");\n  // console.log(props);\n\n  if (props.formData.rawDataExtracted == true) {\n    // Extract Units\n    props.setShowRawData(true);\n  }\n\n  if (props.formData.rawDataExtracted == false) {\n    // Store.addNotification({\n    //   id: 'unit_extraction',\n    //   title: \"Extracting Units\",\n    //   message: \"Please wait while we extract units from the dataset\",\n    //   type: \"default\",\n    //   insert: \"top\",\n    //   container: \"top-right\",\n    //   animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n    //   animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n    // });\n    props.setLoading(true);\n    const processing_result = await ProcessData({\n      commandType: \"raw-data\",\n      formSelected: props.formSelected,\n      projectSelected: props.projectSelected,\n      process_label: \"Extraction of Raw Data\",\n      data: props.data,\n      authToken: props.authToken,\n      setLoading: props.setLoading,\n    });\n\n    if (processing_result === true) {\n      await GetInformationForFormComponent({\n        setAuthToken: props.setAuthToken,\n        authToken: props.authToken,\n        setUserInfo: props.setUserInfo,\n        projectName: props.projectSelected,\n        formName: props.formSelected,\n        setFormData: props.setFormData,\n        setShowRawData: props.setShowRawData,\n        userInfo: props.setUserInfo,\n      });\n      props.setLoading(false);\n\n      Store.removeNotification(\"unit_extraction\");\n    }\n  }\n\n  if (props.formData.unitsExtracted == true) {\n    // Extract Units\n    props.setShowUnits(true);\n  }\n\n  if (props.formData.pricesCalculated == true) {\n    props.setShowPrices(true);\n  }\n  if (props.formData.pricesCalculated == false) {\n  }\n\n  if (props.formData.finalIndicators == true) {\n    props.setShowOutputs(true);\n  }\n  if (props.formData.finalIndicators == false) {\n    //\n  }\n}\n\nexport default function DataAccessComponent() {\n  const projectSelected = useParams().projectName;\n  const formSelected = useParams().formName;\n\n  const [authToken, setAuthToken] = useContext(AuthContext);\n  const [adminData, setAdminData] = useContext(UserContext);\n\n  const history = useHistory();\n\n  const [formData, setFormData] = useState({});\n\n  const [loading, setLoading] = useState(true);\n  const [showUnits, setShowUnits] = useState(false);\n  const [showPrices, setShowPrices] = useState(false);\n  const [showOutputs, setShowOutputs] = useState(false);\n\n  const [showRawData, setShowRawData] = useState(false);\n\n  useEffect(() => {\n    async function CheckLoggedIn() {\n      const logged_in = await CheckForLocalToken({\n        setAuthToken: setAuthToken,\n      });\n      if (logged_in == false) {\n        history.push(\"/logout\");\n      }\n    }\n\n    CheckLoggedIn();\n  }, []);\n\n  useEffect(async () => {\n    // console.log(\"getting user info\");\n    async function GetUserInfo() {\n      await GetInformationForFormComponent({\n        setAuthToken: setAuthToken,\n        authToken: authToken,\n        setUserInfo: setAdminData,\n        projectName: projectSelected,\n        formName: formSelected,\n        setFormData: setFormData,\n        setShowRawData: setShowRawData,\n        setUserInfo: setAdminData,\n      });\n      setLoading(false);\n    }\n    GetUserInfo();\n  }, [authToken]);\n\n  useEffect(() => {\n    // console.log(\"Form Data\");\n    // console.log(formData);\n\n    async function CheckAndUpdateFormInformation() {\n      await CheckFormData({\n        setAuthToken: setAuthToken,\n        authToken: authToken,\n\n        setUserInfo: setAdminData,\n        setFormData: setFormData,\n\n        formData: formData,\n\n        data: adminData,\n        projectSelected: projectSelected,\n        formSelected: formSelected,\n\n        setShowUnits: setShowUnits,\n        setShowPrices: setShowPrices,\n        setShowOutputs: setShowOutputs,\n        setLoading: setLoading,\n\n        setShowRawData: setShowRawData,\n      });\n    }\n\n    CheckAndUpdateFormInformation();\n  }, [formData]);\n\n  return (\n    <>\n      <MainCard\n        CardTitle=\"Data\"\n        filters={[projectSelected, formSelected]}\n        history={history}\n        back_link={\"/projects/\" + projectSelected}\n        doc_extension=\"source/user-guide/processing-data.html#managing-data\"\n        CardBody={\n          loading\n            ? RenderSpinner()\n            : RenderDataCard({\n                authToken: authToken,\n                formData: formData,\n                projectSelected: projectSelected,\n                formSelected: formSelected,\n                showUnits: showUnits,\n                showRawData: showRawData,\n                userInfo: adminData,\n                showPrices: showPrices,\n                showOutputs: showOutputs,\n                setAuthToken: setAuthToken,\n                setFormData: setFormData,\n                setLoading: setLoading,\n                setUserInfo: setAdminData,\n                doc_extension:\n                  \"source/user-guide/processing-data.html#managing-data\",\n              })\n        }\n      ></MainCard>\n    </>\n  );\n}\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Card, Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nimport AuthContext from \"../authentication-component/AuthContext\";\nimport UserContext from \"../user-info-component/UserContext\";\n\nimport { Store } from \"react-notifications-component\";\n\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\n\nimport { CheckForLocalToken } from \"../fetching-context-info/fetching-context-info\";\n\nimport MainCard from \"../main-card-component/main-card-component\";\n\nfunction CheckProjectManager(props) {\n  if (!props.data) {\n    return false;\n  }\n  if (!props.data.user) {\n    return false;\n  }\n\n  if (!props.data.user.roles) {\n    return false;\n  }\n\n  if (!props.data.user.roles.projectManager) {\n    return false;\n  }\n\n  if (props.data.user.roles.projectManager.includes(props.projectSelected)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction BuildRequest(props) {\n  // console.log(props)\n  if (props.userType === \"projectManager\") {\n    return {\n      method: \"post\",\n      url: process.env.REACT_APP_AUTHENTICATOR_URL + \"api/user/project-manager\",\n      headers: {\n        Authorization: props.authToken,\n      },\n      data: {\n        projectName: props.projectName,\n        email: props.email,\n      },\n    };\n  }\n  if (props.userType === \"dataCollector\") {\n    return {\n      method: \"post\",\n      url: process.env.REACT_APP_AUTHENTICATOR_URL + \"api/user/data-collector\",\n      headers: {\n        Authorization: props.authToken,\n      },\n      data: {\n        formName: props.formName,\n        email: props.email,\n      },\n    };\n  }\n\n  if (props.userType === \"analyst\") {\n    return {\n      method: \"post\",\n      url: process.env.REACT_APP_AUTHENTICATOR_URL + \"api/user/analyst\",\n      headers: {\n        Authorization: props.authToken,\n      },\n      data: {\n        formName: props.formName,\n        email: props.email,\n      },\n    };\n  }\n}\n\nasync function AddFormUser(props) {\n  let request = BuildRequest(props);\n\n  try {\n    const result = await axios(request);\n\n    if (result.status === 200) {\n      Store.addNotification({\n        title: \"Success\",\n        message: \"User Added\",\n        type: \"success\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 2000,\n        },\n      });\n    }\n\n    return result;\n  } catch (err) {\n    // console.log(err)\n    Store.addNotification({\n      title: \"Error\",\n      message: err.response.data,\n      type: \"danger\",\n      insert: \"top\",\n      container: \"top-right\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 2000,\n      },\n    });\n    return err;\n  }\n}\n\nfunction UserForm(props) {\n  const [newUser, setNewUser] = useState();\n\n  const [projectManagerEmail, setProjectManagerEmail] = useState();\n\n  const [userType, setUserType] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  // console.log(\"User form props\")\n  // console.log(props)\n  return (\n    <>\n      {props.projectManagerOfForm ? (\n        <>\n          <Card.Body>\n            <Card>\n              <Card.Header as=\"h5\">Add Project Manager</Card.Header>\n              <Card.Body>\n                <Form>\n                  <Form.Group>\n                    <Form.Label>User email</Form.Label>\n                    <Form.Control\n                      onChange={(event) => {\n                        setProjectManagerEmail(event.target.value);\n                      }}\n                    />\n                  </Form.Group>\n                  <Button\n                    className=\"bg-dark text-white border-0 float-right\"\n                    style={{ marginTop: \"10px\" }}\n                    onClick={async () => {\n                      // console.log(props.projectSelected)\n                      const result = await AddFormUser({\n                        authToken: props.authToken,\n                        email: projectManagerEmail,\n                        projectName: props.projectSelected,\n                        formName: null,\n                        userType: \"projectManager\",\n                      });\n                      // console.log(result)\n                    }}\n                  >\n                    Add Project Manager\n                  </Button>\n                </Form>\n              </Card.Body>\n            </Card>\n            <br />\n            <Card>\n              <Card.Header as=\"h5\">Add Form Level User</Card.Header>\n\n              <Card.Body>\n                <Form>\n                  <Form.Group>\n                    <Form.Label>User email</Form.Label>\n                    <Form.Control\n                      onChange={(event) => {\n                        setEmail(event.target.value);\n                      }}\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group>\n                    <Form.Label>User Role</Form.Label>\n                    <Form.Select\n                      aria-label=\"Default select example\"\n                      defaultValue=\"Open this select menu\"\n                      onChange={(event) => {\n                        setUserType(event.target.value);\n                      }}\n                    >\n                      <option disabled={true}>Open this select menu</option>\n                      <option value=\"dataCollector\">\n                        Data Collector: Can access training materials and\n                        configure enumerator devices\n                      </option>\n                      <option value=\"analyst\">\n                        Data Analyst: Can download processed data\n                      </option>\n                    </Form.Select>\n                  </Form.Group>\n\n                  <Button\n                    className=\"bg-dark text-white border-0 float-right\"\n                    style={{ marginTop: \"10px\" }}\n                    onClick={async () => {\n                      const result = await AddFormUser({\n                        authToken: props.authToken,\n                        email: email,\n                        formName: props.formSelected,\n                        userType: userType,\n                      });\n                    }}\n                  >\n                    Add User\n                  </Button>\n                </Form>\n              </Card.Body>\n            </Card>\n          </Card.Body>\n        </>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n}\n\nexport default function UserManagementComponent() {\n  const [projectManagerOfForm, setProjectManagerOfForm] = useState(false);\n\n  const projectSelected = useParams().projectName;\n  const formSelected = useParams().formName;\n\n  const [adminData, setAdminData] = useContext(UserContext);\n  const [authToken, setAuthToken] = useContext(AuthContext);\n\n  const history = useHistory();\n\n  // console.log(\"Admin data\")\n  // console.log(adminData)\n\n  useEffect(async () => {\n    async function CheckLoggedIn() {\n      const logged_in = await CheckForLocalToken({\n        setAuthToken: setAuthToken,\n      });\n      if (logged_in == false) {\n        history.push(\"/logout\");\n      }\n    }\n\n    CheckLoggedIn();\n  }, []);\n\n  useEffect(async () => {\n    const projectManager = CheckProjectManager({\n      data: adminData,\n      projectSelected: projectSelected,\n    });\n    // console.log(\"project manager\")\n    // console.log(projectManager)\n    setProjectManagerOfForm(projectManager);\n  }, [authToken]);\n\n  useEffect(() => {\n    const projectManager = CheckProjectManager({\n      data: adminData,\n      projectSelected: projectSelected,\n    });\n    // console.log(\"project manager\")\n    // console.log(projectManager)\n    setProjectManagerOfForm(projectManager);\n  }, [adminData]);\n\n  return (\n    <>\n      <MainCard\n        CardTitle=\"User Management\"\n        filters={[projectSelected, formSelected]}\n        history={history}\n        back_link={\"/projects/\" + projectSelected}\n        doc_extension=\"source/user-guide/navigating-the-app.html#user-management\"\n        CardBody={UserForm({\n          projectSelected: projectSelected,\n          formSelected: formSelected,\n          projectManagerOfForm: projectManagerOfForm,\n          authToken: authToken,\n        })}\n      />\n    </>\n  );\n}\n","// Copyright (C) 2022 Léo Gorman\n// \n// This file is part of rhomis-data-app.\n// \n// rhomis-data-app is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n// \n// rhomis-data-app is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n// \n// You should have received a copy of the GNU General Public License\n// along with rhomis-data-app.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useContext, useEffect, useState} from 'react'\n\nimport { Login, LoginComponent } from \"../login-component/login-component\"\nimport { RegisterComponent } from '../register-component/register-component';\nimport PortalComponent from '../portal-component/portal-component';\nimport ProjectManagementComponent from \"../project-management-component/project-management-component\"\nimport FormManagementComponent from '../form-management-component/form-management-component';\nimport MainNavbar from '../navigation-bar/navigation-bar-component'\nimport FormCreationComponent from '../form-creation-component/form-creation-component';\n\nimport { LogoutComponent } from '../logout-component/logout-component';\n\nimport DataCollectionComponent from '../data-collection-component/data-collection-component';\nimport DataAccessComponent from '../data-access-component/data-access-component';\nimport UserManagementComponent from '../user-management-component/user-management-component';\nimport AuthContext from '../authentication-component/AuthContext';\nimport UserContext from '../user-info-component/UserContext';\nimport {\n    HashRouter as Router,\n    RouteProps,\n    useHistory,\n    useLocation,\n    // BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n} from \"react-router-dom\";\n\n\nimport { FetchUserInformation, CheckForLocalToken } from '../fetching-context-info/fetching-context-info';\n\n\nexport default function RoutingComponent() {\n\n    const [authToken, setAuthToken] = useContext(AuthContext)\n    const [userInfo, setUserInfo] = useContext(UserContext)\n\n    const [loading, setLoading] = useState(false)\n    const [authenticated, setAuthenticated] = useState(null)\n\n\n    // const [userInfo, setUserInfo] = useContext(UserContext)\n    const history = useHistory()\n    // const location = useLocation()\n\n    useEffect(() => {\n        CheckForLocalToken({\n            setAuthToken: setAuthToken\n        })\n    }, [])\n\n    useEffect(() => {\n        if(authToken===null){\n            setAuthenticated(false)\n        }else{\n            setAuthenticated(true)\n        }\n    }, [authToken])\n\n\n\n\n\n  \n        return(\n            < Router >\n                    {authenticated? <MainNavbar />:<></>}\n\n            <Switch>\n\n                <Route exact path=\"/\">\n                    <Redirect from=\"/\" to=\"/home\" />\n                </Route>\n                <Route path=\"/home\" component={PortalComponent} />\n                {/* <Route path=\"/register\"><RegisterComponent /></Route> */}\n                <Route path=\"/projects/:projectName/forms/:formName/collect/:draftOrLive\" component={DataCollectionComponent} />\n                <Route path=\"/projects/:projectName/forms/:formName/users\" component={UserManagementComponent} />\n                <Route path=\"/projects/:projectName/forms/:formName/data\" component={DataAccessComponent} />\n                <Route path=\"/projects/:projectName\" component={FormManagementComponent} />\n                <Route path=\"/projects\" ><ProjectManagementComponent /></Route>\n\n                <Route path=\"/administration\" component={FormCreationComponent} />\n                <Route path=\"/logout\" component={LogoutComponent} />\n\n                <Route path=\"/login\"><LoginComponent /></Route>\n                <Route path=\"/register\"><RegisterComponent /></Route>\n\n\n                {/* <Route path=\"*\" component={NotFoundComponent} /> */}\n                <Redirect from=\"*\" to=\"/home\" />\n\n            </Switch >\n            {/* </Fade> */}\n\n        </Router >\n        )\n    \n    \n   \n    \n\n}\n\n","import React, { useState, useContext, useEffect } from 'react'\nimport { Button, Card } from 'react-bootstrap'\nimport { FaUserCircle } from 'react-icons/fa'\nimport axios from 'axios'\nimport { useHistory } from 'react-router'\n\nimport {MdMobileOff} from 'react-icons/md'\nimport AuthContext from '../authentication-component/AuthContext';\n\nimport { Store } from 'react-notifications-component';\n\nimport './no-mobile-component.css'\n\n\nexport default function NoMobile(){\n\n\n    return(\n        <div className=\"child-no-mobile-container\">\n        <Card className=\"card-style border-0 no-mobile-card\">\n            <Card.Header className='bg-dark text-white'>\n                Screen Width To Small\n            </Card.Header>\n\n            <Card.Body>\n            <div className=\"icon-container\">\n            <MdMobileOff size={100}/>\n            </div>\n           \n            <div style={{ textAlign: \"center\", width: \"100%\" }}>\n                We have detected you are using a device with a narrow screen. This\n                application is not designed for these types of devices, please try \n                to use a laptop or desktop if you have access to one.\n                </div>\n            </Card.Body>\n\n\n        </Card>\n        </div>\n    )\n}","// Copyright (C) 2022 Léo Gorman\n// \n// This file is part of rhomis-data-app.\n// \n// rhomis-data-app is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n// \n// rhomis-data-app is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n// \n// You should have received a copy of the GNU General Public License\n// along with rhomis-data-app.  If not, see <http://www.gnu.org/licenses/>.\n\n/* See this tutorial for authentication state management\nhttps://stackoverflow.com/questions/41030361/how-to-update-react-context-from-inside-a-child-component\nhttps://reactrouter.com/web/example/auth-workflow \n*/\n\n// Import styling\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// Import router information\nimport React, { useState, useEffect} from 'react';\nimport axios from 'axios';\n\n// Import the various components\nimport RoutingComponent from './components/routing-component/routing-component';\n// Import the context which stores the authentication tokens\nimport AuthContext from './components/authentication-component/AuthContext';\nimport UserContext from './components/user-info-component/UserContext';\n\n\nimport { ReactNotifications } from 'react-notifications-component'\nimport 'react-notifications-component/dist/theme.css'\n\n\n\nimport NoMobile from './components/no-mobile-component/no-mobile-component';\n\n\nfunction App() {\n  const [authToken, setAuthToken] = useState(null);\n  const [userInfo, setUserInfo] = useState(null)\n\n\n  const [width, setWidth] = useState(window.innerWidth);\n  const [isMobile, setIsMobile] = useState(false);\n\nfunction handleWindowSizeChange() {\n    setWidth(window.innerWidth);\n}\nuseEffect(() => {\n    window.addEventListener('resize', handleWindowSizeChange);\n    return () => {\n        window.removeEventListener('resize', handleWindowSizeChange);\n    }\n}, []);\n\nuseEffect(() => {\n  setIsMobile(width <= 1000) // use to 768\n\n},[width])\n\n\n\n  return (\n    <>\n      <ReactNotifications />\n\n      <AuthContext.Provider value={[authToken, setAuthToken]}>\n        <UserContext.Provider value={[userInfo, setUserInfo]}>\n          <div className=\"main-app-background\">\n            <div className=\"main-page\">\n              {!isMobile?<RoutingComponent />:<NoMobile/>}\n            </div >\n          </div>\n        </UserContext.Provider>\n      </AuthContext.Provider>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}